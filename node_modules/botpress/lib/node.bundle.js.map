{"version":3,"sources":["webpack:///webpack/bootstrap 6e6166241ee3c2c6e173","webpack:///./index.js","webpack:///external \"babel-polyfill\"","webpack:///external \"path\"","webpack:///./src/database/helpers.js","webpack:///external \"moment\"","webpack:///./src/cli/index.js","webpack:///external \"commander\"","webpack:///./src/cli/init.js","webpack:///external \"child_process\"","webpack:///external \"prompt\"","webpack:///external \"chalk\"","webpack:///external \"lodash\"","webpack:///external \"fs\"","webpack:///./src/util.js","webpack:///external \"module\"","webpack:///./src/stats.js","webpack:///external \"os\"","webpack:///external \"crypto\"","webpack:///external \"universal-analytics\"","webpack:///external \"node-machine-id\"","webpack:///./src/cli/start.js","webpack:///./src/cli/create.js","webpack:///./src/cli/install.js","webpack:///./src/modules.js","webpack:///external \"bluebird\"","webpack:///external \"axios\"","webpack:///./src/configurator.js","webpack:///external \"js-yaml\"","webpack:///./src/cli/uninstall.js","webpack:///./src/cli/migrate.js","webpack:///./src/cli/migrations ^\\.\\/.*$","webpack:///./src/cli/migrations/0.1.js","webpack:///external \"knex\"","webpack:///./src/database/kvs.js","webpack:///./src/cli/list.js","webpack:///./src/botpress.js","webpack:///external \"source-map-support/register\"","webpack:///external \"cluster\"","webpack:///external \"dotenv\"","webpack:///./extensions/lite/ServiceLocator.js","webpack:///./extensions/lite/services.js","webpack:///./src/bus.js","webpack:///external \"eventemitter2\"","webpack:///./src/middlewares.js","webpack:///external \"mware\"","webpack:///./src/licensing.js","webpack:///./src/listeners.js","webpack:///./extensions/lite/license/index.js","webpack:///./src/logger.js","webpack:///external \"winston\"","webpack:///./src/security/index.js","webpack:///external \"jsonwebtoken\"","webpack:///./extensions/lite/authentication/index.js","webpack:///./src/notifications.js","webpack:///external \"uuid\"","webpack:///./src/hear.js","webpack:///./src/fallback.js","webpack:///./src/database/index.js","webpack:///./src/database/tables.js","webpack:///./extensions/lite/database/index.js","webpack:///./src/database/users.js","webpack:///./src/database/tags.js","webpack:///./src/database/notifications.js","webpack:///./src/database/content.js","webpack:///./src/about.js","webpack:///./src/umm/index.js","webpack:///external \"util\"","webpack:///./src/umm/engine.js","webpack:///external \"mustache\"","webpack:///external \"ms\"","webpack:///./src/umm/proactive.js","webpack:///./src/users.js","webpack:///./src/content/service.js","webpack:///external \"glob\"","webpack:///./src/conversations.js","webpack:///./package.json","webpack:///./extensions/lite/emails/index.js","webpack:///./extensions/lite/mediator/index.js","webpack:///./src/server/index.js","webpack:///external \"express\"","webpack:///external \"http\"","webpack:///./src/server/socket.js","webpack:///external \"socket.io\"","webpack:///external \"socketio-jwt\"","webpack:///./src/server/static.js","webpack:///./src/server/api.js","webpack:///external \"body-parser\"","webpack:///./src/server/anonymous.js","webpack:///./extensions/lite/api/index.js","webpack:///./extensions/lite/api/accounts.js","webpack:///./src/server/secured.js","webpack:///external \"multer\""],"names":["global","_babelPolyfill","require","path","DatabaseHelpers","CLI","Botpress","module","exports","isLite","knex","client","config","dateParse","raw","exp","dateFormat","iso","date","toDate","toISOString","columnOrDateFormat","lite","colOrDate","sql","createTableIfNotExists","tableName","cb","schema","hasTable","then","exists","format","now","isBefore","d1","d2","isAfter","isBetween","d3","isSameDay","hourOfDay","bool","true","false","parse","value","json","set","obj","JSON","stringify","get","command","description","option","action","alias","version","process","argv","args","length","help","introductionText","waitingText","nextStepText","bold","assertDoesntExist","existsSync","file","print","exit","getTemplate","templatePath","join","__dirname","template","templateContent","readFileSync","generateTemplate","filename","variables","compiled","destination","replace","writeFileSync","generate","result","mkdirSync","install","npmCmd","stdout","on","write","data","toString","stderr","code","program","dirName","undefined","chdir","track","each","currentDirectoryName","basename","resolve","properties","name","white","pattern","message","required","default","author","yes","delimiter","start","err","IS_DEV","env","NODE_ENV","NPM_CMD","test","platform","mapping","info","warn","yellow","arguments","error","red","success","green","level","matched","splice","console","log","black","bgWhite","resolveFromDir","fromDir","moduleId","fromFile","_resolveFilename","id","paths","_nodeModulePaths","resolveModuleRootPath","entryPath","current","dirname","lookup","resolveProjectFile","projectLocation","throwIfNotExist","packagePath","Error","getBotpressVersion","botpressPackagePath","botpressJson","isDeveloping","botfile","visitor","queued","catch","hash","createHash","update","arch","hostname","type","digest","mid","strictCidFormat","forEach","a","category","label","optOutStats","push","event","trackException","projectPath","options","eval","stack","bot","MODULE_NAME_CONVENTION_BEGINS","MODULE_NAME_REGEX","RegExp","doneText","documentation","directory","prefixModuleNameWithBotpress","moduleDirectory","modules","modulesManager","MODULES_URL","FETCH_TIMEOUT","logger","dataLocation","kvs","apply","fetchAllModules","timeout","loadModules","moduleDefinitions","botpress","loadedCount","loadedModules","loader","mod","entry","handlers","configuration","init","scanModules","botPackage","deps","dependencies","merge","devDependencies","reduce","key","root","modulePackage","homepage","settings","getRandomCommunityHero","method","modulesCachePath","listAllCommunityModules","sample","username","github","avatar","contributions","hero","contributors","login","html_url","avatar_url","mapModuleList","installed","listInstalledModules","map","stars","stargazers_count","forks","forks_count","docLink","latest","keywords","fullName","full_name","updated","updated_at","issues","open_issues_count","icon","package","menuIcon","includes","license","title","featured","popular","official","diff","props","newModules","debug","Date","resolveModuleNames","names","TypeError","prefix","substr","runSpawn","reject","installModules","cwd","uninstallModules","uninstall","prodDeps","keys","filter","dep","listInstalled","_scan","_load","validations","validation","defaultValues","amendOption","validTypes","amendOptions","mapValues","validateSet","validateSave","object","objKeys","requiredKeys","validateName","overwriteFromDefaultValues","overwriteFromEnvValues","_v","overwriteFromBotfileValues","config_name","overwriteFromConfigFileValues","configFilePath","fromCallback","safeLoadAll","callback","configFromFile","removeUnusedKeys","final","createConfig","saveAll","loadAll","all","fromVersion","files","sortBy","x","toApply","f","parseFloat","mapSeries","migration","finally","botfilePath","bot_path","dbLocation","dataDir","migrate_database_schema","migrate_botfile","updateUsers","connection","useNullAsDefault","table","string","created_on","rows","bootstrap","DELETE_TABLES","dropTableIfExists","has","dropTable","before","indexOf","after","getSetCallback","betweenGetAndSetCallback","where","limit","row","at","_set","operation","modified_on","insert","setValue","isNil","original","newObj","Object","assign","primary","text","timestamp","RESTART_EXIT_CODE","getDataLocation","isAbsolute","mkdirIfNeeded","_setupEnv","stats","interval","setInterval","isFirstRun","modulesConfigDir","db","sqlite","location","postgres","security","securityConfig","events","notifications","about","licensing","middlewares","hear","hearMiddleware","middleware","fallbackMiddleware","emails","emailConfig","mediator","convo","users","contentManager","umm","register","incomingMiddleware","bp","_loadedModules","scanAndRegisterCategories","_bindEvents","server","emit","values","ready","port","middlewareAutoLoading","load","projectEntry","call","reason","p","isMaster","fork","worker","isWorker","_start","setTimeout","envPath","envConfig","k","ENV_OVERLOAD","initPromise","isFulfilled","resolveInit","_services","throwIfNotFound","getService","registerService","fn","EventBus","wildcard","maxListeners","createMiddleware","middlewareName","_use","_error","use","dispatch","isPlainObject","conformity","conformsTo","run","_promise","middlewaresFilePath","incoming","outgoing","customizations","noopChain","readCustomizations","writeCustomizations","setCustomizations","order","enabled","resetCustomizations","handler","some","m","list","orderBy","customization","licenseMiddleware","sendToMiddleware","mw","sendIncoming","sendOutgoing","getCustomizations","licensesPath","getLicenses","packageJsonPath","agplContent","botpressContent","agpl","licensedUnder","toLowerCase","changeLicense","licensePath","licenseFileName","licenseContent","pkg","next","response","userId","user","sendText","to","responseTo","guard","getLicensing","licenses","currentLicense","find","getStatus","getFeatures","matches","conditions","pairs","toPairs","every","comparrer","eventValue","isFunction","isRegExp","isString","captured","tail","exec","isEqual","isArray","conditionsItem","licensed","status","logConfig","Logger","transports","Console","prettyPrint","colorize","enableFileTransport","logFile","add","File","maxsize","maxSize","archiveToFile","disableFileLogs","authentication","tokenExpiry","password","ip","attempt","canAttempt","authenticate","loginUser","getSecret","secret","token","sign","expiresIn","decoded","verify","verifyUser","verified","_authentication","secretPath","createNewSecret","randomBytes","adminPassword","BOTPRESS_ADMIN_PASSWORD","attempts","lastCleanTimestamp","maxAttempts","resetAfter","email","first_name","last_name","roles","resetSecret","redirectUrl","enableSound","callingFile","getOriginatingModule","callingModuleRoot","url","menuText","notification","v4","sound","read","toDatabase","logMessage","loggerLevel","create","archived","fromDatabase","getArchived","getInbox","notificationId","archive","archiveAll","markAsRead","markAllAsRead","send","origPrepareStackTrace","prepareStackTrace","_","shift","getFileName","module_id","module_icon","module_name","redirect_url","chain","condition","fallbackHandler","initializeCoreDatabase","createKnex","_knex","host","database","ssl","pool","afterCreate","conn","getDb","saveUser","gender","timezone","locale","picture_url","userRow","query","select","from","kvs_instance","createKvs","_kvs","getKvs","kvsGet","instance","kvsSet","concat","table_factories","enu","integer","unique","boolean","getBotInformation","packageJson","fs","promisifyAll","statAsync","storagePath","isDirectory","readdirAsync","contents","endsWith","extname","readFileAsync","getDocument","incomingEvent","blocName","additionalData","initialData","startsWith","itemName","getItem","contentItem","itemCategoryId","categoryId","getCategorySchema","itemCategory","itemBloc","ummBloc","split","fileName","markdown","fullContext","originalEvent","isObject","blocs","context","outputPlatform","bloc","doSendBloc","sendBloc","processors","templates","getStoragePath","registerConnector","processOutgoing","verbose","throwIfNoPlatform","currentPlatform","getTemplates","ummPath","single","folder","saveDocument","content","filePath","writeFileAsync","__internal","delay","wait","processIncoming","reply","proactiveMethods","ParsingError","instructionIndex","internalMessage","captureStackTrace","mapBlocs","rawBlocs","mapBloc","premapInstruction","instruction","index","instructions","detectedPlatforms","evaluate","val","isArrayLike","isEmpty","if","unless","i","platforms","trim","mapKeys","__","trimmed","mapInstruction","messages","ret","parseInt","typing","omit","processor","msg","mustached","render","rawBloc","getUser","inspect","forgedEvent","forged","sendToUser","tag","toUpper","hasTag","tagged_on","del","untag","getTag","tags","v","getTags","selectTags","subQuery","groupBy","leftJoin","offset","t","toUpperCase","filterByTag","listWithTags","count","categories","formDir","formsDir","searchOptions","requiredFields","field","listAvailableCategories","jsonSchema","ui","uiSchema","itemId","formData","computeFormData","computeMetadata","metadata","computePreviewText","previewText","randomId","body","created_by","createOrUpdateCategoryItem","searchTerm","items","andWhere","orWhere","transformCategoryItem","listCategoryItems","ids","whereIn","deleteCategoryItems","item","getItemsByMetadata","exportContent","documents","doc","importContent","createdBy","createdOn","INTERVAL_MSGS","formatMessage","initialEvent","formatBloc","isBloc","isBlocCall","validateHandlers","Thread","queue","waiting","_last","last","enqueue","match","defaultHandler","Conversation","messageTypes","clockSpeed","_threads","currentThread","defaultThread","createThread","_get","_cache","intervalBetweenMessages","_timeoutHandle","_timeoutInterval","_useTimeout","_clock","tick","_clockSpeed","_processing","_sendLock","_outgoing","endWhenDone","sendNext","setImmediate","clearInterval","clearTimeout","thread","getCurrentThread","restart","emitAsync","peek","stop","dequeue","say","resetTimeout","repeat","teardown","convos","belongsToConvo","initial","c","validateEvent","activate","destroy","app","api","serveApi","socket","serveSocket","staticStuff","serveStatic","createServer","Promise","listen","io","admin","of","guest","handshake","authorize","visitorId","socketId","onAny","__socketId","__room","serveModule","req","res","appName","contentType","serveCustomTheme","static","headers","accept","sendFile","shortName","iconRequestPath","iconPath","liteDir","liteViews","readdirSync","b","settingsKey","webBundle","bundlePath","params","subview","sendStatus","customTheme","themeLocation","routersConditions","routers","maybeSendRequireLogin","authorization","end","_authenticationMiddleware","installRouter","installProtector","installMaybeUse","maybeUse","urlencoded","extended","maybeApply","getRouter","router","Router","secure","ressource","wrap","authorizeApi","authorized","post","put","delete","originalUrl","apis","anonymous","installAnonymous","secured","installSecured","logsSecret","noInterface","plugins","getContributor","unlink","until","fields","results","download","archivePath","search","setHeader","contentUploadMulter","limits","fileSize","fileFilter","mimetype","array","buffer"],"mappings":"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","file":"node.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/Users/slvn/Desktop/botpress\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6e6166241ee3c2c6e173","if (!global._babelPolyfill) {\n  require('babel-polyfill')\n}\n\nvar path = require('path')\n\nvar DatabaseHelpers = require('./src/database/helpers.js')\n\nvar CLI = () => require('./src/cli')\nvar Botpress = () => require('./src/botpress.js')\n\nmodule.exports = { Botpress, DatabaseHelpers, CLI }\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","module.exports = require(\"babel-polyfill\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-polyfill\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 3\n// module chunks = 0","/*\n  The goal of these helpers is to generate SQL queries\n  that are valid for both SQLite and Postgres\n*/\n\nimport moment from 'moment'\n\nconst isLite = knex => {\n  return knex.client.config.client === 'sqlite3'\n}\n\nmodule.exports = knex => {\n\n  const dateParse = exp => {\n    return isLite(knex)\n    ? knex.raw(`strftime('%Y-%m-%dT%H:%M:%fZ', ${exp})`)\n    : knex.raw(exp)\n  }\n\n  const dateFormat = date => {\n    const iso = moment(date).toDate().toISOString()\n    return dateParse(`'${iso}'`)\n  }\n\n  const columnOrDateFormat = colOrDate => {\n    const lite = isLite(knex)\n\n    if (colOrDate.sql) {\n      return colOrDate.sql\n    }\n\n    if (typeof colOrDate === 'string') {\n      return lite ? dateParse(colOrDate) : `\"${colOrDate}\"`\n    }\n\n    return dateFormat(colOrDate)\n  }\n\n  return {\n    isLite: () => isLite(knex),\n\n    // knex's createTableIfNotExists doesn't work with postgres\n    // https://github.com/tgriesser/knex/issues/1303\n    createTableIfNotExists: (tableName, cb) => {\n      return knex.schema.hasTable(tableName)\n      .then(exists => {\n        if (exists) { return }\n        return knex.schema.createTableIfNotExists(tableName, cb)\n      })\n    },\n\n    date: {\n      format: dateFormat,\n\n      now: () => isLite(knex) ? knex.raw(\"strftime('%Y-%m-%dT%H:%M:%fZ', 'now')\") : knex.raw('now()'),\n\n      isBefore: (d1, d2) => {\n        d1 = columnOrDateFormat(d1)\n        d2 = columnOrDateFormat(d2)\n\n        return knex.raw(d1 + ' < ' + d2)\n      },\n\n      isAfter: (d1, d2) => {\n        d1 = columnOrDateFormat(d1)\n        d2 = columnOrDateFormat(d2)\n\n        return knex.raw(d1 + ' > ' + d2)\n      },\n\n      isBetween: (d1, d2, d3) => {\n        d1 = columnOrDateFormat(d1)\n        d2 = columnOrDateFormat(d2)\n        d3 = columnOrDateFormat(d3)\n\n        return knex.raw(`${d1} BETWEEN ${d2} AND ${d3}`)\n      },\n\n      isSameDay: (d1, d2) => {\n        d1 = columnOrDateFormat(d1)\n        d2 = columnOrDateFormat(d2)\n\n        return knex.raw(`date(${d1}) = date(${d2})`)\n      },\n\n      hourOfDay: date => {\n        date = columnOrDateFormat(date)\n        return isLite(knex)\n          ? knex.raw(`strftime('%H', ${date})`)\n          : knex.raw(`to_char(${date}, 'HH24')`)\n      }\n    },\n\n    bool: {\n\n      true: () => isLite(knex) ? 1 : true,\n      false: () => isLite(knex) ? 0 : false,\n      parse: value => isLite(knex) ? !!value : value\n\n    },\n\n    json: {\n      set: obj => {\n        return isLite(knex) ? obj && JSON.stringify(obj) : obj\n      },\n      get: obj => {\n        return isLite(knex) ? obj && JSON.parse(obj) : obj\n      }\n    }\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/helpers.js","module.exports = require(\"moment\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"moment\"\n// module id = 5\n// module chunks = 0","import program from 'commander'\n\nimport init from './init'\nimport start from './start'\nimport create from './create'\nimport install from './install'\nimport uninstall from './uninstall'\nimport migrate from './migrate'\nimport list from './list'\n\nimport { getBotpressVersion } from '../util'\n\nprogram\n  .command('init')\n  .description('Create a new bot in current directory')\n  .option('-y, --yes', 'Say yes to every prompt and use default values')\n  .action(init)\n\nprogram\n  .command('start [path]')\n  .alias('s')\n  .description('Starts running a bot')\n  .action(start)\n\nprogram\n  .command('install <module> [modules...]')\n  .alias('i')\n  .description('Add modules to the current bot')\n  .action(install)\n\nprogram\n  .command('uninstall <module> [modules...]')\n  .alias('u')\n  .description('Remove modules from the current bot')\n  .action(uninstall)\n\nprogram\n  .command('list')\n  .alias('ls')\n  .description('List installed modules')\n  .action(list)\n\nprogram\n  .command('create')\n  .alias('c')\n  .description('Create a new module for development or distribution')\n  .action(create)\n\nprogram\n  .command('migrate <fromVersion>')\n  .description('Migrates the current bot from version X')\n  .action(migrate)\n\nprogram\n  .version(getBotpressVersion())\n  .description('Easily create, manage and extend chatbots.')\n  .parse(process.argv)\n\nif (!program.args.length) {\n  program.help()\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/cli/index.js","module.exports = require(\"commander\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"commander\"\n// module id = 7\n// module chunks = 0","import { spawn } from 'child_process'\nimport prompt from 'prompt'\nimport chalk from 'chalk'\nimport path from 'path'\nimport _ from 'lodash'\nimport fs from 'fs'\nimport util from '../util'\nimport stats from '../stats'\n\nconst introductionText =\n  '\\nHey there, thanks for using botpress!' +\n  \"\\nWe'll walk you through the creation of your new bot.\" +\n  '\\nFor more information or help, please visit http://github.com/botpress/botpress' +\n  '\\n---------------'\n\nconst waitingText = 'please wait, we are installing everything for you...'\nconst nextStepText = 'now run ' + chalk.bold('`bp start`') + ' in your terminal'\n\nconst assertDoesntExist = file => {\n  if (fs.existsSync(file)) {\n    util.print(\n      'error',\n      'package.json or botfile.js are already in repository, ' + 'remove them before running this command again.'\n    )\n    process.exit(1)\n  }\n}\n\nconst getTemplate = template => {\n  const templatePath = path.join(__dirname, 'cli/templates/init', template)\n  const templateContent = fs.readFileSync(templatePath)\n  return _.template(templateContent)\n}\n\nconst generateTemplate = (filename, variables = {}) => {\n  const template = getTemplate(filename)\n  const compiled = template(variables)\n  const destination = path.join(filename.replace(/_\\._/, '.'))\n  fs.writeFileSync(destination, compiled)\n}\n\nconst generate = result => {\n  generateTemplate('package.json', result)\n  generateTemplate('LICENSE')\n  generateTemplate('botfile.js')\n  generateTemplate('index.js')\n  generateTemplate('content.yml')\n  generateTemplate('_._gitignore')\n  generateTemplate('_._welcome')\n\n  fs.mkdirSync('data')\n  fs.writeFileSync('data/bot.log', '')\n  fs.writeFileSync('data/notification.json', '[]')\n\n  fs.mkdirSync('modules_config')\n\n  util.print(waitingText)\n  const install = spawn(util.npmCmd, ['install'])\n\n  install.stdout.on('data', data => {\n    process.stdout.write(data.toString())\n  })\n\n  install.stderr.on('data', data => {\n    process.stdout.write(data.toString())\n  })\n\n  install.on('close', code => {\n    if (code > 0) {\n      util.print('error', 'an error occurred during installation')\n    } else {\n      util.print('success', 'installation has completed successfully')\n      util.print(nextStepText)\n    }\n  })\n}\n\nmodule.exports = function(program) {\n  var dirName = process.argv[3]\n  if (dirName != undefined) {\n    if (!fs.existsSync(dirName)) {\n      fs.mkdirSync(dirName)\n      process.chdir(dirName)\n    } else {\n      util.print('error', dirName + ' directory already exists')\n      return\n    }\n  }\n  stats({}).track('cli', 'bot', 'init')\n\n  util.print(introductionText)\n\n  _.each(['package.json', 'botfile.js', 'index.js'], assertDoesntExist)\n\n  const currentDirectoryName = path.basename(path.resolve('./'))\n\n  var schema = {\n    properties: {\n      name: {\n        description: chalk.white('name:'),\n        pattern: /^[a-z0-9][a-z0-9-_\\.]+$/,\n        message: 'name must be only lowercase letters, ' + 'digits, dashes, underscores and dots.',\n        required: true,\n        default: currentDirectoryName\n      },\n      description: {\n        required: false,\n        description: chalk.white('description:')\n      },\n      author: {\n        required: false,\n        description: chalk.white('author:')\n      },\n      version: {\n        required: false,\n        description: chalk.white('version:'),\n        default: '0.0.1'\n      }\n    }\n  }\n\n  if (program.yes) {\n    generate({\n      name: currentDirectoryName,\n      description: '',\n      author: '',\n      version: '0.0.1'\n    })\n  } else {\n    prompt.message = ''\n    prompt.delimiter = ''\n    prompt.start()\n    prompt.get(schema, function(err, result) {\n      generate(result)\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/cli/init.js","module.exports = require(\"child_process\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"child_process\"\n// module id = 9\n// module chunks = 0","module.exports = require(\"prompt\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"prompt\"\n// module id = 10\n// module chunks = 0","module.exports = require(\"chalk\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"chalk\"\n// module id = 11\n// module chunks = 0","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 12\n// module chunks = 0","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 13\n// module chunks = 0","import chalk from 'chalk'\nimport path from 'path'\nimport Module from 'module'\nimport fs from 'fs'\n\nconst IS_DEV = process.env.NODE_ENV !== 'production'\n\nconst NPM_CMD = /^win/.test(process.platform) ? 'npm.cmd' : 'npm'\n\nconst print = function(...args) {\n  const mapping = {\n    info: chalk.white,\n    warn: function() { return chalk.yellow('WARN', ...arguments) },\n    error: function() { return chalk.red('ERR', ...arguments) },\n    success: function() { return chalk.green('OK', ...arguments) }\n  }\n\n  let level = mapping[args[0]]\n  const matched = !!level\n\n  if (!matched) {\n    level = mapping.info\n  } else {\n    args.splice(0, 1)\n  }\n\n  console.log(chalk.black.bgWhite('[botpress]'), '\\t', level(...args))\n}\n\nconst resolveFromDir = function (fromDir, moduleId) {\n  fromDir = path.resolve(fromDir)\n  const fromFile = path.join(fromDir, 'noop.js')\n  try {\n    return Module._resolveFilename(moduleId, {\n      id: fromFile,\n      filename: fromFile,\n      paths: Module._nodeModulePaths(fromDir)\n    })\n  } catch (err) {\n    return null\n  }\n}\n\nconst resolveModuleRootPath = function(entryPath) {\n  let current = path.dirname(entryPath)\n  while (current !== '/') {\n    const lookup = path.join(current, 'package.json')\n    if (fs.existsSync(lookup)) {\n      return current\n    }\n    current = path.resolve(path.join(current, '..'))\n  }\n  return null\n}\n\nconst resolveProjectFile = (file, projectLocation, throwIfNotExist) => {\n  const packagePath = path.resolve(projectLocation || './', file)\n\n  if (!fs.existsSync(packagePath)) {\n    if (throwIfNotExist) {\n      throw new Error('Could not find bot\\'s package.json file')\n    }\n    return null\n  }\n\n  return packagePath\n}\n\nconst getBotpressVersion = () => {\n  const botpressPackagePath = path.join(__dirname, '../package.json')\n  const botpressJson = JSON.parse(fs.readFileSync(botpressPackagePath))\n  return botpressJson.version\n}\n\nmodule.exports = {\n  print,\n  resolveFromDir,\n  isDeveloping: IS_DEV,\n  resolveModuleRootPath,\n  resolveProjectFile,\n  npmCmd: NPM_CMD,\n  getBotpressVersion\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util.js","module.exports = require(\"module\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"module\"\n// module id = 15\n// module chunks = 0","import os from 'os'\nimport crypto from 'crypto'\nimport ua from 'universal-analytics'\nimport { machineId } from 'node-machine-id'\n\nmodule.exports = (botfile) => {\n\n  let visitor = null\n  let queued = []\n\n  machineId()\n  .catch(() => {\n    const hash = crypto.createHash('sha256')\n    hash.update(os.arch() + os.hostname() + os.platform() + os.type())\n    return hash.digest('hex')\n  })\n  .then(mid => {\n    visitor = ua('UA-90044826-1', mid, { strictCidFormat: false })\n    queued.forEach(a => a())\n    queued = []\n  })\n\n  const track = (category, action, label = null, value = null) => {\n    if (!!botfile.optOutStats) {\n      return // Don't track if bot explicitly opted out from stats collection\n    }\n\n    if (!visitor) {\n      queued.push(() => track(category, action, label, value))\n      return\n    }\n\n    visitor.event(category, action, label, value, () => { /* ignore errors */ })\n  }\n\n  const trackException = message => {\n    if (!!botfile.optOutStats) {\n      return // Don't track if bot explicitly opted out from stats collection\n    }\n\n    if (!visitor) {\n      queued.push(() => trackException(message))\n      return\n    }\n\n    visitor.event(message, () => { /* ignore errors */ })\n  }\n\n  return { track, trackException }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stats.js","module.exports = require(\"os\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"os\"\n// module id = 17\n// module chunks = 0","module.exports = require(\"crypto\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"crypto\"\n// module id = 18\n// module chunks = 0","module.exports = require(\"universal-analytics\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"universal-analytics\"\n// module id = 19\n// module chunks = 0","module.exports = require(\"node-machine-id\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"node-machine-id\"\n// module id = 20\n// module chunks = 0","import path from 'path'\nimport fs from 'fs'\nimport util from '../util'\nimport chalk from 'chalk'\n\n/**\n * Entry point of botpress\n *\n * It will do the following things:\n *\n * 1. Find botpress instance creator in `node_modules` folder in current project.\n * 2. Find the `botfile.js` which will be injected into the creator to create the instance.\n * 3. Start the botpress instance.\n */\nmodule.exports = function(projectPath, options) {\n  let Botpress = null\n\n  if (!projectPath || typeof(projectPath) !== 'string') {\n    projectPath = '.'\n  }\n\n  projectPath = path.resolve(projectPath)\n\n  try {\n    Botpress = eval('require')(path.join(projectPath, 'node_modules', 'botpress')).Botpress()\n  } catch (err) {\n    util.print('error', err.message)\n    util.print('error', err.stack)\n    util.print('error', '(fatal) Could not load the local version of botpress')\n    util.print('Hint: 1) have you used `botpress init` to create a new bot the proper way?')\n    util.print('Hint: 2) Do you have read and write permissions on the current directory?')\n    util.print('-------------')\n    util.print('If none of the above works, this might be a bug in botpress. ' +\n      'Please contact the Botpress Team on gitter and provide the printed error above.')\n    process.exit(1)\n  }\n\n  const botfile = path.join(projectPath, 'botfile.js')\n  if (!fs.existsSync(botfile)) {\n    util.print('error', `(fatal) No ${chalk.bold('botfile.js')} file found at: ` + botfile)\n    process.exit(1)\n  }\n\n  const bot = new Botpress({ botfile })\n  bot.start()\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/cli/start.js","import { spawn } from 'child_process'\nimport prompt from 'prompt'\nimport chalk from 'chalk'\nimport path from 'path'\nimport fs from 'fs'\nimport _ from 'lodash'\nimport util from '../util'\nimport stats from '../stats'\n\nconst MODULE_NAME_CONVENTION_BEGINS = 'botpress-'\nconst MODULE_NAME_REGEX = new RegExp(/^botpress-.*/g)\n\nconst introductionText = \"This program will bootstrap a new Botpress module\"\nconst doneText = \"You're all set! The module is boostrapped and ready to be developed.\"\nconst documentation = \"Tip: when coding your bot, use the command `npm run watch` to recompile\" +\n  \" your module automatically. Also, we strongly recommend that you install your module using \" +\n  \"`npm link ../path/to/botpress-module` so that your bot always points to the most recent version.\"\n\nconst getTemplate = (template) => {\n  const templatePath = path.join(__dirname, 'cli/templates/create' , template)\n  const templateContent = fs.readFileSync(templatePath)\n  return _.template(templateContent)\n}\n\nconst generateTemplate = (directory, filename, variables = {}) => {\n  const template = getTemplate(filename)\n  const compiled = template(variables)\n  const destination = path.join(directory, filename.replace(/_\\._/, '.'))\n  fs.writeFileSync(destination, compiled)\n}\n\nconst prefixModuleNameWithBotpress = name => {\n\n  if (!MODULE_NAME_REGEX.test(name)) {\n    util.print('warn','the name of your module needs to begin by \"botpress-\"')\n    util.print('warn','we renamed your module to '+ chalk.bold(MODULE_NAME_CONVENTION_BEGINS + name))\n    name = MODULE_NAME_CONVENTION_BEGINS + name\n  }\n\n  return name\n}\n\n\nmodule.exports = function() {\n  const moduleDirectory = path.resolve('.')\n  const dirname = path.basename(moduleDirectory)\n\n  stats({}).track('cli', 'modules', 'create')\n\n  util.print(introductionText)\n\n  var schema = {\n    properties: {\n      name: {\n        description: chalk.white('module name:'),\n        pattern: /^[a-z0-9][a-z0-9-_\\.]+$/,\n        message: 'name must be only lowercase letters, ' +\n          'digits, dashes, underscores and dots.',\n        required: true,\n        default: dirname\n      },\n      description: {\n        required: false,\n        description: chalk.white('description:')\n      },\n      author: {\n        required: false,\n        description: chalk.white('author:')\n      },\n      version: {\n        required: false,\n        description: chalk.white('version:'),\n        default: '1.0.0'\n      }\n    }\n  }\n\n  prompt.message = ''\n  prompt.delimiter = ''\n\n  prompt.start()\n\n  prompt.get(schema, function (err, result) {\n    result.name = prefixModuleNameWithBotpress(result.name)\n    \n    \n    if (dirname !== result.name) {\n      util.print('warn', 'We usually recommend that the name of the module directory'\n        + ` (${dirname}) be the same as the module name (${result.name})`)\n    }\n\n    if (fs.existsSync(path.join(moduleDirectory, 'package.json'))) {\n      util.print('error', \"Expected module directory to be empty / uninitialized\")\n      process.exit(1)\n    } else {\n      generateTemplate(moduleDirectory, 'package.json', result)\n      generateTemplate(moduleDirectory, 'LICENSE')\n      generateTemplate(moduleDirectory, 'webpack.js')\n      generateTemplate(moduleDirectory, '_._gitignore')\n      generateTemplate(moduleDirectory, '_._npmignore')\n\n      fs.mkdirSync(moduleDirectory + '/src')\n      generateTemplate(moduleDirectory, 'src/index.js')\n\n      fs.mkdirSync(moduleDirectory + '/src/views')\n      generateTemplate(moduleDirectory, 'src/views/index.jsx')\n      generateTemplate(moduleDirectory, 'src/views/style.scss')\n\n      util.print('Installing dependencies, please wait...')\n\n      const install = spawn(util.npmCmd, ['install'])\n\n      install.stdout.on('data', (data) => {\n        process.stdout.write(data.toString())\n      })\n\n      install.stderr.on('data', (data) => {\n        process.stdout.write(data.toString())\n      })\n\n      install.on('close', (code) => {\n        if (code > 0) {\n          util.print('error', 'An error occurred during the dependencies installation of your module')\n        } else {\n          util.print('success', 'Module dependencies installed')\n          util.print(doneText)\n          util.print(documentation)\n        }\n      })\n    }\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/cli/create.js","import util from '../util'\n\nimport createModules from '../modules'\n\nimport stats from '../stats'\n\nconst waitingText = 'please wait, we are trying to install your new modules...'\n\nmodule.exports = function(module, modules) {\n  stats({}).track('cli', 'modules', 'install')\n  util.print('info', waitingText)\n  let modulesManager = createModules(null, './', null)\n  modulesManager.install(module, ...modules)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/cli/install.js","import { spawn } from 'child_process'\nimport path from 'path'\nimport fs from 'fs'\nimport Promise from 'bluebird'\nimport _ from 'lodash'\nimport moment from 'moment'\nimport axios from 'axios'\nimport { createConfig } from './configurator'\n\nimport {\n  print,\n  isDeveloping,\n  npmCmd,\n  resolveModuleRootPath,\n  resolveFromDir,\n  resolveProjectFile\n} from './util'\n\nconst MODULES_URL = 'https://s3.amazonaws.com/botpress-io/all-modules.json'\nconst FETCH_TIMEOUT = 5000\n\nmodule.exports = (logger, projectLocation, dataLocation, kvs) => {\n\n  const log = (level, ...args) => {\n    if (logger && logger[level]) {\n      logger[level].apply(this, args)\n    } else {\n      print.apply(this, [level, ...args])\n    }\n  }\n\n  const fetchAllModules = () => {\n    return axios.get(MODULES_URL, { timeout: FETCH_TIMEOUT })\n    .then(({ data }) => data)\n    .catch(() => logger.error('Could not fetch modules'))\n  }\n\n  const loadModules = (moduleDefinitions, botpress) => {\n    let loadedCount = 0\n    const loadedModules = {}\n\n    moduleDefinitions.forEach(mod => {\n      const loader = eval('require')(mod.entry)\n\n      if (typeof loader !== 'object') {\n        return logger.warn(`Ignoring module ${mod.name}. Invalid entry point signature.`)\n      }\n\n      mod.handlers = loader\n\n      try {\n        mod.configuration = createConfig({\n          kvs: kvs,\n          name: mod.name,\n          botfile: botpress.botfile,\n          projectLocation,\n          options: loader.config || {}\n        })\n      } catch (err) {\n        logger.error(`Invalid module configuration in module ${mod.name}:`, err)\n      }\n\n      try {\n        loader.init && loader.init(botpress, mod.configuration)\n      } catch (err) {\n        logger.warn('Error during module initialization: ', err)\n      }\n\n      loadedModules[mod.name] = mod\n      logger.info(`Loaded ${mod.name}, version ${mod.version}`)\n      loadedCount++\n    })\n\n    if (loadedCount > 0) {\n      logger.info(`Loaded ${loadedCount} modules`)\n    }\n\n    return loadedModules\n  }\n\n  const scanModules = () => {\n    const packagePath = path.join(projectLocation, 'package.json')\n\n    if (!fs.existsSync(packagePath)) {\n      return logger.warn('No package.json found at project root, ' +\n        'which means botpress can\\'t load any module for the bot.')\n    }\n\n    const botPackage = eval('require')(packagePath)\n\n    let deps = botPackage.dependencies || {}\n    if (isDeveloping) {\n      deps = _.merge(deps, botPackage.devDependencies || {})\n    }\n\n    return _.reduce(deps, (result, value, key) => {\n      if (!/^botpress-/i.test(key)) {\n        return result\n      }\n      const entry = resolveFromDir(projectLocation, key)\n      if (!entry) {\n        return result\n      }\n      const root = resolveModuleRootPath(entry)\n      if (!root) {\n        return result\n      }\n\n      const modulePackage = eval('require')(path.join(root, 'package.json'))\n      if (!modulePackage.botpress) {\n        return result\n      }\n\n      return result.push({\n        name: key,\n        root: root,\n        homepage: modulePackage.homepage,\n        settings: modulePackage.botpress,\n        version: modulePackage.version,\n        entry: entry\n      }) && result\n    }, [])\n  }\n\n  const getRandomCommunityHero = Promise.method(() => {\n    const modulesCachePath = path.join(dataLocation, './modules-cache.json')\n\n    return listAllCommunityModules()\n    .then(() => {\n      const { modules } = JSON.parse(fs.readFileSync(modulesCachePath))\n\n      const module = _.sample(modules)\n\n      if (!module) {\n        return {\n          username: 'danyfs',\n          github: 'https://github.com/danyfs',\n          avatar: 'https://avatars1.githubusercontent.com/u/5629987?v=3',\n          contributions: 'many',\n          module: 'botpress'\n        }\n      }\n\n      const hero = _.sample(module.contributors)\n\n      return {\n        username: hero.login,\n        github: hero.html_url,\n        avatar: hero.avatar_url,\n        contributions: hero.contributions,\n        module: module.name\n      }\n    })\n  })\n\n  const mapModuleList = (modules) => {\n    const installed = listInstalledModules()\n    return modules.map(mod => ({\n      name: mod.name,\n      stars: mod.github.stargazers_count,\n      forks: mod.github.forks_count,\n      docLink: mod.homepage,\n      version: mod['dist-tags'].latest,\n      keywords: mod.keywords,\n      fullName: mod.github.full_name,\n      updated: mod.github.updated_at,\n      issues: mod.github.open_issues_count,\n      icon: mod.package.botpress.menuIcon,\n      description: mod.description,\n      installed: _.includes(installed, mod.name),\n      license: mod.license,\n      author: !mod.author.name ? mod.author : mod.author.name,\n      title: mod.title,\n      category: mod.category,\n      featured: mod.featured,\n      popular: mod.popular,\n      official: mod.official\n    }))\n  }\n\n  const listAllCommunityModules = Promise.method(() => {\n\n    if (!fs) {\n      return [] // TODO Fetch & return\n    }\n\n    const modulesCachePath = path.join(dataLocation, './modules-cache.json')\n    if (!fs.existsSync(modulesCachePath)) {\n      fs.writeFileSync(modulesCachePath, JSON.stringify({\n        modules: [],\n        updated: null\n      }))\n    }\n\n    const { modules, updated } = JSON.parse(fs.readFileSync(modulesCachePath))\n\n    if (updated && moment().diff(moment(updated), 'minutes') <= 30) {\n      return mapModuleList(modules)\n    }\n\n    return Promise.props({\n      newModules: fetchAllModules()\n    })\n    .then(({ newModules }) => {\n\n      if (!newModules || !newModules.length) {\n        if (modules.length > 0) {\n          logger.debug('Fetched invalid modules. Report this to the Botpress Team.')\n          return mapModuleList(modules)\n        } else {\n          newModules = newModules || []\n        }\n      }\n\n      fs.writeFileSync(modulesCachePath, JSON.stringify({\n        modules: newModules,\n        updated: new Date()\n      }))\n\n      return mapModuleList(newModules)\n    })\n  })\n\n  const resolveModuleNames = (names) => {\n    return names.map(name => {\n      if (!name || typeof(name) !== 'string') {\n        throw new TypeError('Expected module name to be a string')\n      }\n\n      let basename = path.basename(name)\n      let prefix = ''\n\n      if (basename !== name) {\n        prefix = name.substr(0, name.length - basename.length - 1)\n      }\n\n      if (basename.replace(/botpress-?/i, '').length === 0) {\n        throw new Error(`Invalid module name: ${basename}`)\n      }\n\n      if (!/^botpress-/i.test(basename)) {\n        basename = `botpress-${basename}`\n      }\n\n      return prefix + basename\n    })\n  }\n\n  const runSpawn = (command) => {\n    return new Promise((resolve, reject) => {\n      command.stdout.on('data', (data) => {\n        log('info', data.toString())\n      })\n\n      command.stderr.on('data', (data) => {\n        log('error', data.toString())\n      })\n\n      command.on('close', (code) => {\n        if (code > 0) {\n          reject()\n        } else {\n          resolve()\n        }\n      })\n    })\n  }\n\n  const installModules = Promise.method((...names) => {\n    let modules = resolveModuleNames(names)\n\n    const install = spawn(npmCmd, ['install', '--save', ...modules], {\n      cwd: projectLocation\n    })\n\n    log('info', 'Installing modules: ' + modules.join(', '))\n\n    return runSpawn(install)\n    .then(() => log('success', 'Modules successfully installed'))\n    .catch(err => {\n      log('error', 'An error occurred during modules installation.')\n      throw err\n    })\n  })\n\n  const uninstallModules = Promise.method((...names) => {\n    let modules = resolveModuleNames(names)\n    const uninstall = spawn(npmCmd, ['uninstall', '--save', ...modules], {\n      cwd: projectLocation\n    })\n\n    log('info', `Uninstalling modules: ${modules.join(', ')}`)\n\n    return runSpawn(uninstall)\n    .then(() => log('success', 'Modules successfully removed'))\n    .catch(err => {\n      log('error', 'An error occurred during modules removal.')\n      throw err\n    })\n  })\n\n\n  const listInstalledModules = () => {\n    const packagePath = resolveProjectFile('package.json', projectLocation, true)\n    const { dependencies } = JSON.parse(fs.readFileSync(packagePath))\n    const prodDeps = _.keys(dependencies)\n\n    return _.filter(prodDeps, dep => /botpress-.+/i.test(dep))\n  }\n\n  return {\n    listAllCommunityModules,\n    getRandomCommunityHero,\n    install: installModules,\n    uninstall: uninstallModules,\n    listInstalled: listInstalledModules,\n    _scan: scanModules,\n    _load: loadModules\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules.js","module.exports = require(\"bluebird\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bluebird\"\n// module id = 25\n// module chunks = 0","module.exports = require(\"axios\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"axios\"\n// module id = 26\n// module chunks = 0","import _ from 'lodash'\nimport fs from 'fs'\nimport path from 'path'\nimport yaml from 'js-yaml'\nimport Promise from 'bluebird'\n\nconst validations = {\n  'any': (value, validation) => validation(value),\n  'string': (value, validation) => typeof(value) === 'string' && validation(value),\n  'choice': (value, validation) => _.includes(validation, value),\n  'bool': (value, validation) => (value === true || value === false) && validation(value)\n}\n\nconst defaultValues = {\n  'any': null,\n  'string': '',\n  'bool': false\n}\n\nconst amendOption = (option, name) => {\n\n  const validTypes = _.keys(validations)\n  if (!option.type || !_.includes(validTypes, option.type)) {\n    throw new Error(`Invalid type (${option.type || ''}) for config key (${name})`)\n  }\n\n  const validation = option.validation || (() => true)\n\n  if (typeof(option.default) !== 'undefined' && !validations[option.type](option.default, validation)) {\n    throw new Error(`Invalid default value (${option.default}) for (${name})`)\n  }\n\n  if (!option.default && !_.includes(_.keys(defaultValues), option.type)) {\n    throw new Error(`Default value is mandatory for type ${option.type} (${name})`)\n  }\n\n  return {\n    type: option.type,\n    required: option.required || false,\n    env: option.env || null,\n    default: option.default || defaultValues[option.type],\n    validation: validation\n  }\n}\n\nconst amendOptions = options => {\n  return _.mapValues(options, amendOption)\n}\n\nconst validateSet = (options, name, value) => {\n\n  // if name is not in options, throw\n  if (!_.includes(_.keys(options), name)) {\n    throw new Error(`Unrecognized configuration key: ${name}`)\n  }\n\n  if (!validations[options[name].type](value, options[name].validation)) {\n    throw new Error(`Invalid value for key: ${name}`)\n  }\n}\n\nconst validateSave = (options, object) => {\n  const objKeys = _.keys(object)\n  const requiredKeys = _.filter(_.keys(options), key => options[key].required)\n\n  _.each(requiredKeys, required => {\n    if (!_.includes(objKeys, required)) {\n      throw new Error(`Missing required configuration: '${required}'`)\n    }\n  })\n\n  _.each(objKeys, name => {\n    validateSet(options, name, object[name])\n  })\n}\n\nconst validateName = name => {\n  if (!name || !/^[A-Z0-9._-]+$/i.test(name)) {\n    throw new Error(`Invalid configuration name: ${name}. The name must only contain letters, _ and -`)\n  }\n}\n\nconst overwriteFromDefaultValues = (options, object) => {\n  _.each(_.keys(options), name => {\n    if (typeof object[name] === 'undefined') {\n      object[name] = options[name].default\n    }\n  })\n\n  return object\n}\n\nconst overwriteFromEnvValues = (options, object) => {\n  return _.mapValues(object, (_v, name) => {\n    if (options[name] && options[name].env && process.env[options[name].env]) {\n      return process.env[options[name].env]\n    }\n\n    return _v\n  })\n}\n\nconst overwriteFromBotfileValues = (config_name, options, botfile, object) => {\n  return _.mapValues(object, (_v, name) => {\n    if (botfile \n      && botfile.config \n      && botfile.config[config_name] \n      && typeof botfile.config[config_name][name] !== 'undefined') {\n      return botfile.config[config_name][name]\n    }\n\n    return _v\n  })\n}\n\nconst overwriteFromConfigFileValues = async (config_name, options, projectLocation, object) => {\n  if (!projectLocation) {\n    return object\n  }\n\n  const configFilePath = path.resolve(projectLocation, `${config_name}.config.yml`)\n\n  if (!fs.existsSync(configFilePath)) {\n    return object\n  }\n\n  const configFromFile = await Promise.fromCallback(callback => {\n    yaml.safeLoadAll(fs.readFileSync(configFilePath), value => callback(null, value))\n  })\n\n  return _.mapValues(object, (_v, name) => {\n    if (typeof configFromFile[name] !== 'undefined') {\n      return configFromFile[name]\n    }\n    return _v\n  })\n}\n\nconst removeUnusedKeys = (options, object) => {\n  const final = {}\n\n  _.each(_.keys(options), name => {\n    if (typeof object[name] !== 'undefined') {\n      final[name] = object[name]\n    }\n  })\n\n  return final\n}\n\nconst createConfig = ({ kvs, name, botfile = {}, options = {}, projectLocation = null }) => {\n\n  if (!kvs || !kvs.get || !kvs.set) {\n    throw new Error('A valid \\'kvs\\' is mandatory to createConfig')\n  }\n\n  validateName(name)\n  options = amendOptions(options)\n\n  const saveAll = obj => {\n    validateSave(options, obj)\n    return kvs.set('__config', obj, name)\n  }\n\n  const loadAll = () => {\n    return kvs.get('__config', name)\n    .then(all => overwriteFromDefaultValues(options, all || {}))\n    .then(all => overwriteFromBotfileValues(name, options, botfile, all))\n    .then(all => overwriteFromConfigFileValues(name, options, projectLocation, all))\n    .then(all => overwriteFromEnvValues(options, all))\n    .then(all => removeUnusedKeys(options, all))\n  }\n\n  const get = name => {\n    return kvs.get('__config', name + '.' + name)\n    .then(value => overwriteFromDefaultValues(options, { [name]: value }))\n    .then(all => overwriteFromBotfileValues(name, options, botfile, all))\n    .then(all => overwriteFromConfigFileValues(name, options, projectLocation, all))\n    .then(all => overwriteFromEnvValues(options, all))\n    .then(obj => obj[name])\n  }\n\n  const set = (name, value) => {\n    validateSet(options, name, value)\n    return kvs.set('__config', value, name + '.' + name)\n  }\n  \n  return { saveAll, loadAll, get, set, options }\n}\n\nmodule.exports = { createConfig }\n\n\n\n// WEBPACK FOOTER //\n// ./src/configurator.js","module.exports = require(\"js-yaml\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"js-yaml\"\n// module id = 28\n// module chunks = 0","import util from '../util'\n\nimport createModules from '../modules'\n\nimport stats from '../stats'\n\nconst waitingText = 'please wait, we are trying to uninstall the modules...'\n\nmodule.exports = function(module, modules) {\n  stats({}).track('cli', 'modules', 'install')\n  util.print('info', waitingText)\n  let modulesManager = createModules(null, './', null)\n  modulesManager.uninstall(module, ...modules)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/cli/uninstall.js","import util from '../util'\nimport stats from '../stats'\nimport fs from 'fs'\nimport path from 'path'\nimport _ from 'lodash'\nimport Promise from 'bluebird'\n\nmodule.exports = function(fromVersion) {\n  stats({}).track('cli', 'migration', fromVersion)\n\n  if (!fs.existsSync('./botfile.js')) {\n    throw new Error('You must be inside a bot directory to run a migration')\n  }\n\n  let files = _.sortBy(require.context('./migrations/').keys(), x => x)\n\n  const toApply = _.filter(files, f => {\n    if (!/.js$/i.test(f)) {\n      return false\n    }\n\n    return parseFloat(fromVersion) < parseFloat(f.replace(/\\.js/i, ''))\n  })\n\n  return Promise.mapSeries(toApply, file => {\n    const migration = require('./migrations/' + file)\n    return migration(path.resolve('.'))\n    .then(() => {\n      util.print('success', `Migration ${file.replace('.js', '')} applied successfully`)\n    })\n  })\n  .finally(() => {\n    util.print('success', 'Migration completed.')\n    process.exit(0)\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/cli/migrate.js","var map = {\n\t\"./0.1\": 32,\n\t\"./0.1.js\": 32\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 31;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/cli/migrations ^\\.\\/.*$\n// module id = 31\n// module chunks = 0","import Knex from 'knex'\nimport path from 'path'\nimport fs from 'fs'\n\nimport kvs from '../../database/kvs'\nimport util from '../../util'\n\nmodule.exports = bot_path => {\n  const botfilePath = path.join(bot_path, 'botfile.js')\n  const botfile = eval('require')(botfilePath)\n  const dbLocation = path.resolve(path.join(bot_path, botfile.dataDir, 'db.sqlite'))\n\n  return migrate_database_schema(dbLocation)\n  .then(() => migrate_botfile(botfilePath))\n}\n\n\nfunction migrate_database_schema(dbLocation) {\n\n  const updateUsers = `strftime('%Y-%m-%dT%H:%M:%fZ', created_on/1000, 'unixepoch')`\n\n  const knex = Knex({\n    client: 'sqlite3',\n    connection: { filename: dbLocation },\n    useNullAsDefault: true\n  })\n\n  return knex.schema.table('users', function (table) {\n    table.string('picture_url')\n    table.string('first_name')\n    table.string('last_name')\n  })\n  .then(() => knex('users').update({ created_on: knex.raw(updateUsers) }))\n  .then(rows => {\n    util.print('info', 'Updated ' + rows + ' users')\n    util.print('warn', 'Users table was migrated to new schema but existing '\n      + 'users will miss the following fields: `picture_url`, `first_name`, '\n      + '`last_name`. They have been left to `null`.')\n  })\n  .catch(() => {\n    util.print('warn', 'Did not migrate table `users` as schema was already up to date')\n  })\n  .then(() => kvs(knex).bootstrap())\n  .catch(() => {\n    util.print('warn', 'Did not create table `kvs` as schema was already up to date')\n  })\n  .then(() => {\n\n    if (!process.env.DELETE_TABLES) {\n      util.print('warn', \"This migration must delete the tables of \"\n        + \"the following modules: `botpress-scheduler`, `botpress-analytics`, \"\n        + \"`botpress-hitl` and `botpress-subscription`.\")\n\n      util.print('warn', \"This step has been skipped because you didn't provide \"\n        + \"the DELETE_TABLES=true environement variable.\")\n\n      util.print('warn', \"Please backup your data if necessary then re-run with DELETE_TABLES=true\")\n      return false\n    }\n\n    return dropTableIfExists(knex, 'analytics_interactions')\n    .then(() => dropTableIfExists(knex, 'analytics_runs'))\n    .then(() => dropTableIfExists(knex, 'broadcast_outbox'))\n    .then(() => dropTableIfExists(knex, 'broadcast_schedules'))\n    .then(() => dropTableIfExists(knex, 'hitl_messages'))\n    .then(() => dropTableIfExists(knex, 'hitl_sessions'))\n    .then(() => dropTableIfExists(knex, 'subscription_users'))\n    .then(() => dropTableIfExists(knex, 'subscriptions'))\n    .then(() => dropTableIfExists(knex, 'scheduler_schedules'))\n    .then(() => dropTableIfExists(knex, 'scheduler_tasks'))\n    .then(() => util.print('info', 'Dropped module tables'))\n  })\n}\n\nfunction dropTableIfExists(knex, tableName) {\n  return knex.schema.hasTable(tableName)\n  .then(has => {\n    if (has) {\n      return knex.schema.dropTable(tableName)\n    }\n  })\n}\n\nfunction migrate_botfile(botfilePath) {\n  const before = fs.readFileSync(botfilePath).toString()\n\n  if (before.indexOf('postgres:') >= 0) {\n    util.print('warn', 'Did not migrate botfile as it seemed like `postgres`'\n      + ' was already present. Please migrate manually if this is a mistake.')\n    return false\n  }\n\n  const after = before.replace(/module\\.exports.*?=.*?{/i, `module.exports = {\n\n  /**\n  * Postgres configuration\n  */\n  postgres: {\n    enabled: process.env.DATABASE === 'postgres',\n    host: process.env.PG_HOST || '127.0.0.1',\n    port: process.env.PG_PORT || 5432,\n    user: process.env.PG_USER || '',\n    password: process.env.PG_PASSWORD || '',\n    database: process.env.PG_DB || ''\n  },`)\n\n  fs.writeFileSync(botfilePath, after)\n\n  util.print('info', 'Updated botfile')\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/cli/migrations/0.1.js","module.exports = require(\"knex\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"knex\"\n// module id = 33\n// module chunks = 0","import Promise from 'bluebird'\nimport _ from 'lodash'\n\nimport helpers from './helpers'\n\n/*\n  Possible options:\n    - betweenGetAndSetCallback: will be called between the get and the set\n    and wait for promise to resolve\n    - tableName: overrides the KVS table's name\n*/\nmodule.exports = (knex, options = {}) => {\n  const getSetCallback = options.betweenGetAndSetCallback || (() => Promise.resolve())\n  const tableName = options.tableName || 'kvs'\n\n  const get = (key, path) => {\n    return knex(tableName).where({ key }).limit(1).then().get(0).then(row => {\n      if (!row) {\n        return null\n      }\n\n      const obj = JSON.parse(row.value)\n      if (!path) {\n        return obj\n      }\n\n      return _.at(obj, [path])[0]\n    })\n  }\n\n  const _set = (key, value, operation = 'update') => {\n    const now = helpers(knex).date.now()\n\n    if (operation === 'update') {\n      return knex(tableName).where({ key }).update({\n        value: JSON.stringify(value),\n        modified_on: now\n      }).then()\n    } else {\n      return knex(tableName).insert({\n        key: key,\n        value: JSON.stringify(value),\n        modified_on: now\n      }).then()\n    }\n  }\n\n  const set = (key, value, path) => {\n    const setValue = obj => {\n      if (path) {\n        _.set(obj, path, value)\n        return obj\n      } else {\n        return value\n      }\n    }\n\n    return get(key)\n    .then(original => {\n      return getSetCallback()\n      .then(() => {\n        if (!_.isNil(original)) {\n          const newObj = setValue(Object.assign({}, original))\n          return _set(key, newObj, 'update')\n        } else {\n          const obj = setValue({})\n          return _set(key, obj, 'insert')\n          .catch(() => _set(key, obj, 'update'))\n        }\n      })\n    })\n  }\n\n  const bootstrap = () => {\n    return helpers(knex).createTableIfNotExists(tableName, function(table) {\n      table.string('key').primary()\n      table.text('value')\n      table.timestamp('modified_on')\n    })\n  }\n\n  return { get, set, bootstrap }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/kvs.js","import { print } from '../util'\n\nimport createModules from '../modules'\n\nmodule.exports = function() {\n  let modulesManager = createModules(null, './', null)\n  let modules = modulesManager.listInstalled()\n\n  if (!modules || modules.length === 0) {\n    print('info', \"There are no module installed.\")\n    print('------------------')\n    print('info', \"To install modules, use `botpress install <module-name>`\")\n    print('info', \"You can discover modules in the Modules section of your bot UI\" +\n      \". You can also search npm with the botpress keyword.\")\n  } else {\n    print('info', \"There are \" + modules.length + \" modules installed:\")\n    modules.forEach(mod => print('>> ' + mod))\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/cli/list.js","import 'source-map-support/register'\n\nimport chalk from 'chalk'\nimport path from 'path'\nimport fs from 'fs'\nimport _ from 'lodash'\nimport cluster from 'cluster'\nimport dotenv from 'dotenv'\n\nimport ServiceLocator from '+/ServiceLocator'\nimport EventBus from './bus'\n\nimport createMiddlewares from './middlewares'\nimport createLogger from './logger'\nimport createSecurity from './security'\nimport createNotifications from './notifications'\nimport createHearMiddleware from './hear'\nimport createFallbackMiddleware from './fallback'\nimport createDatabase from './database'\nimport createLicensing from './licensing'\nimport createAbout from './about'\nimport createModules from './modules'\nimport createUMM from './umm'\nimport createUsers from './users'\nimport createContentManager from './content/service'\nimport createConversations from './conversations'\nimport stats from './stats'\nimport packageJson from '../package.json'\nimport createEmails from '+/emails'\nimport createMediator from '+/mediator'\n\nimport createServer from './server'\n\nimport { getBotpressVersion } from './util'\n\nimport { isDeveloping, print } from './util'\n\nconst RESTART_EXIT_CODE = 107\n\nconst getDataLocation = (dataDir, projectLocation) =>\n  dataDir && path.isAbsolute(dataDir) ? path.resolve(dataDir) : path.resolve(projectLocation, dataDir || 'data')\n\nconst mkdirIfNeeded = (path, logger) => {\n  if (!fs.existsSync(path)) {\n    logger.info(`Creating data directory: ${path}`)\n\n    try {\n      fs.mkdirSync(path)\n    } catch (err) {\n      logger.error(`[FATAL] Error creating directory: ${err.message}`)\n      process.exit(1)\n    }\n  }\n}\n\n/**\n * Global context botpress\n*/\nclass botpress {\n  /**\n   * Create botpress\n   *\n   * @param {string} obj.botfile - the config path\n   */\n  constructor({ botfile }) {\n    this.version = getBotpressVersion()\n    /**\n     * The project location, which is the folder where botfile.js located\n     */\n    this.projectLocation = path.dirname(botfile)\n\n    /**\n     * Setup env with dotenv *before* requiring the botfile config\n     */\n    this._setupEnv()\n\n    /**\n     * The botfile config object\n     */\n    this.botfile = eval('require')(botfile)\n\n    this.stats = stats(this.botfile)\n\n    this.interval = null\n  }\n\n  /**\n   * Start the bot instance\n   *\n   * It will do the following initiation steps:\n   *\n   * 1. setup logger\n   * 2. resolve paths (dataLocation)\n   * 3. inject security functions\n   * 4. load modules\n   */\n  async _start() {\n    this.stats.track('bot', 'started')\n\n    if (!this.interval) {\n      this.interval = setInterval(() => {\n        this.stats.track('bot', 'running')\n      }, 30 * 1000)\n    }\n\n    // change the current working directory to botpress's installation path\n    // the bot's location is kept in this.projectLocation\n    process.chdir(path.join(__dirname, '../'))\n\n    const { projectLocation, botfile } = this\n\n    const isFirstRun = fs.existsSync(path.join(projectLocation, '.welcome'))\n    const dataLocation = getDataLocation(botfile.dataDir, projectLocation)\n    const modulesConfigDir = getDataLocation(botfile.modulesConfigDir, projectLocation)\n    const dbLocation = path.join(dataLocation, 'db.sqlite')\n    const version = packageJson.version\n\n    const logger = createLogger(dataLocation, botfile.log)\n    mkdirIfNeeded(dataLocation, logger)\n    mkdirIfNeeded(modulesConfigDir, logger)\n\n    logger.info(`Starting botpress version ${version}`)\n\n    const db = createDatabase({\n      sqlite: { location: dbLocation },\n      postgres: botfile.postgres\n    })\n\n    const security = createSecurity({\n      dataLocation,\n      securityConfig: botfile.login,\n      db\n    })\n\n    const modules = createModules(logger, projectLocation, dataLocation, db.kvs)\n\n    const moduleDefinitions = modules._scan()\n\n    const events = new EventBus()\n\n    const notifications = createNotifications({ knex: await db.get(), modules: moduleDefinitions, logger, events })\n    const about = createAbout(projectLocation)\n    const licensing = createLicensing({ logger, projectLocation, version, db, botfile })\n    const middlewares = createMiddlewares(this, dataLocation, projectLocation, logger)\n    const { hear, middleware: hearMiddleware } = createHearMiddleware()\n    const { middleware: fallbackMiddleware } = createFallbackMiddleware(this)\n    const emails = createEmails({ emailConfig: botfile.emails })\n    const mediator = createMediator(this)\n    const convo = createConversations({ logger, middleware: middlewares })\n    const users = createUsers({ db })\n    const contentManager = createContentManager({ db, logger, projectLocation, botfile })\n    const umm = createUMM({ logger, middlewares, projectLocation, botfile, db, contentManager })\n\n    middlewares.register(umm.incomingMiddleware)\n    middlewares.register(hearMiddleware)\n    middlewares.register(fallbackMiddleware)\n\n    _.assign(this, {\n      dataLocation,\n      isFirstRun,\n      version,\n      logger,\n      security, // login, authenticate, getSecret\n      events,\n      notifications, // load, save, send\n      about,\n      middlewares,\n      hear,\n      licensing,\n      modules,\n      db,\n      emails,\n      mediator,\n      convo,\n      umm,\n      users,\n      contentManager\n    })\n\n    ServiceLocator.init({ bp: this })\n\n    const loadedModules = modules._load(moduleDefinitions, this)\n\n    this.stats.track('bot', 'modules', 'loaded', loadedModules.length)\n\n    _.assign(this, {\n      _loadedModules: loadedModules\n    })\n\n    contentManager.scanAndRegisterCategories()\n\n    mediator.install()\n    notifications._bindEvents()\n\n    const server = createServer(this)\n    server.start().then(() => {\n      events.emit('ready')\n      for (let mod of _.values(loadedModules)) {\n        mod.handlers.ready && mod.handlers.ready(this, mod.configuration)\n      }\n\n      const { port } = botfile\n      logger.info(chalk.green.bold('Bot launched. Visit: http://localhost:' + port))\n    })\n\n    const middlewareAutoLoading = _.get(botfile, 'middleware.autoLoading')\n    if (!_.isNil(middlewareAutoLoading) && middlewareAutoLoading === false) {\n      logger.debug('Middleware Auto Loading was disabled. Call bp.middlewares.load() manually.')\n    } else {\n      middlewares.load()\n    }\n\n    const projectEntry = eval('require')(projectLocation)\n    if (typeof projectEntry === 'function') {\n      projectEntry.call(projectEntry, this)\n    } else {\n      logger.error('[FATAL] The bot entry point must be a function that takes an instance of bp')\n      process.exit(1)\n    }\n\n    process.on('uncaughtException', err => {\n      logger.error('[FATAL] An unhandled exception occurred in your bot', err)\n      if (isDeveloping) {\n        logger.error(err.stack)\n      }\n\n      this.stats.trackException(err.message)\n      process.exit(1)\n    })\n\n    process.on('unhandledRejection', (reason, p) => {\n      logger.error('Unhandled Rejection in Promise: ', p, 'Reason:', reason)\n\n      this.stats.trackException(reason)\n      if (isDeveloping && reason && reason.stack) {\n        logger.error(reason.stack)\n      }\n    })\n  }\n\n  start() {\n    if (cluster.isMaster) {\n      cluster.fork()\n\n      cluster.on('exit', (worker, code /* , signal */) => {\n        if (code === RESTART_EXIT_CODE) {\n          cluster.fork()\n\n          this.stats.track('bot', 'restarted')\n          print('info', '*** restarted worker process ***')\n        } else {\n          process.exit(code)\n        }\n      })\n    }\n\n    if (cluster.isWorker) {\n      this._start()\n    }\n  }\n\n  restart(interval = 0) {\n    setTimeout(() => {\n      process.exit(RESTART_EXIT_CODE)\n    }, interval)\n  }\n\n  _setupEnv() {\n    const envPath = path.resolve(this.projectLocation, '.env')\n    if (fs.existsSync(envPath)) {\n      const envConfig = dotenv.parse(fs.readFileSync(envPath))\n      for (var k in envConfig) {\n        if (_.isNil(process.env[k]) || process.env.ENV_OVERLOAD) {\n          process.env[k] = envConfig[k]\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = botpress\n\n\n\n// WEBPACK FOOTER //\n// ./src/botpress.js","module.exports = require(\"source-map-support/register\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"source-map-support/register\"\n// module id = 37\n// module chunks = 0","module.exports = require(\"cluster\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cluster\"\n// module id = 38\n// module chunks = 0","module.exports = require(\"dotenv\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"dotenv\"\n// module id = 39\n// module chunks = 0","import Promise from 'bluebird'\nimport services from '+/services'\n\nconst _services = {}\nlet resolveInit = false\n\nlet initPromise = new Promise(resolve => {\n  resolveInit = resolve\n})\n\nasync function init(obj) {\n  if (!initPromise.isFulfilled()) {\n    resolveInit()\n    Object.assign(_services, await services(obj))\n  }\n}\n\nfunction registerService(name, fn) {\n  if (!!_services[name]) {\n    throw new Error(`Service '${name}' has already been set`)\n  }\n\n  _services[name] = fn\n}\n\nasync function getService(name, throwIfNotFound = true) {\n  await initPromise\n  .timeout(5000)\n  .catch(err => {\n    throw new Error('ServiceLocator was not initialized')\n  })\n  \n  if (throwIfNotFound && !_services[name]) {\n    throw new Error(`Service '${name}' not registered`)\n  }\n\n  return _services[name]\n}\n\nmodule.exports = { init, registerService, getService }\n\n\n\n// WEBPACK FOOTER //\n// ./extensions/lite/ServiceLocator.js","module.exports = async ({ bp }) => {}\n\n\n// WEBPACK FOOTER //\n// ./extensions/lite/services.js","import EventEmitter2 from 'eventemitter2'\n\nclass EventBus extends EventEmitter2 {\n  constructor() {\n    super({\n      wildcard: true,\n      maxListeners: 100\n    })\n  }\n}\n\nmodule.exports = EventBus\n\n\n\n// WEBPACK FOOTER //\n// ./src/bus.js","module.exports = require(\"eventemitter2\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"eventemitter2\"\n// module id = 43\n// module chunks = 0","import _ from 'lodash'\nimport mware from 'mware'\nimport path from 'path'\nimport fs from 'fs'\nimport Promise from 'bluebird'\n\nimport licensing from './licensing'\n\nconst createMiddleware = function(bp, middlewareName) {\n  const _use = mware()\n  const _error = mware()\n\n  const use = function(middleware) {\n    if (typeof(middleware) !== 'function') {\n      throw new TypeError('Expected all middleware arguments to be functions')\n    }\n\n    if (middleware.length === 2) {\n      _use(middleware)\n    } else if (middleware.length === 3) {\n      _error(middleware)\n    }\n  }\n\n  const dispatch = function(event) {\n    if (!_.isPlainObject(event)) {\n      throw new TypeError('Expected all dispatch arguments to be plain event objects')\n    }\n\n    const conformity = {\n      type: function(value) { return typeof(value) === 'string' },\n      platform: function(value) { return typeof(value) === 'string' },\n      text: function(value) { return typeof(value) === 'string' },\n      raw: function() { return true }\n    }\n\n    if (!_.conformsTo(event, conformity)) {\n      throw new TypeError('Expected event to contain (type: string), ' +\n        '(platform: string), (text: string), (raw: any)')\n    }\n\n    // Provide botpress to the event handlers\n    event.bp = bp\n\n    _use.run(event, function(err) {\n      if (err) {\n        _error.run(err, event, () => {\n          bp.logger.error(`[BOTPRESS] Unhandled error in middleware (${middlewareName}). Error: ${err.message}`)\n        })\n      }\n    })\n\n    return event._promise || Promise.resolve()\n  }\n\n  return { use, dispatch }\n}\n\nmodule.exports = function(bp, dataLocation, projectLocation, logger) {\n  const middlewaresFilePath = path.join(dataLocation, 'middlewares.json')\n  let incoming, outgoing, middlewares, customizations\n\n  const noopChain = function() {\n    let message = 'Middleware called before middlewares have been loaded. This is a no-op.'\n     + ' Have you forgotten to call `bp.loadMiddlewares()` in your bot?'\n\n    if (arguments && typeof(arguments[0]) === 'object') {\n      message += '\\nCalled with: ' + JSON.stringify(arguments[0], null, 2)\n    }\n\n    logger.warn(message)\n  }\n\n  const readCustomizations = () => {\n    if (!fs.existsSync(middlewaresFilePath)) {\n      fs.writeFileSync(middlewaresFilePath, '{}')\n    }\n    return JSON.parse(fs.readFileSync(middlewaresFilePath))\n  }\n\n  const writeCustomizations = () => {\n    fs.writeFileSync(middlewaresFilePath, JSON.stringify(customizations))\n  }\n\n  const setCustomizations = middlewares => {\n    _.each(middlewares, (middleware => {\n      const { name, order, enabled } = middleware\n      customizations[name] = { order, enabled }\n    }))\n    writeCustomizations()\n  }\n\n  const resetCustomizations = () => {\n    customizations = {}\n    writeCustomizations()\n  }\n\n  const register = (middleware) => {\n    if (!middleware || !middleware.name) {\n      logger.error('A unique middleware name is mandatory')\n      return false\n    }\n\n    if (!middleware.handler) {\n      logger.error('A middleware handler is mandatory')\n      return false\n    }\n\n    if (!middleware.type || (middleware.type !== 'incoming' && middleware.type !== 'outgoing')) {\n      logger.error('A middleware type (incoming or outgoing) is required')\n      return false\n    }\n\n    middleware.order = middleware.order || 0\n    middleware.enabled = typeof middleware.enabled === 'undefined' ? true: !!middleware.enabled\n\n    if (_.some(middlewares, m => m.name === middleware.name)) {\n      logger.error('Another middleware with the same name has already been registered')\n      return false\n    }\n\n    middlewares.push(middleware)\n  }\n\n  const list = () => {\n    return _.orderBy(middlewares.map(middleware => {\n      const customization = customizations[middleware.name]\n      if (customization) {\n        return Object.assign({}, middleware, customization)\n      }\n      return middleware\n    }), 'order')\n  }\n\n  const load = () => {\n    incoming = createMiddleware(bp, 'incoming')\n    outgoing = createMiddleware(bp, 'outgoing')\n\n    const { middleware: licenseMiddleware } = bp.licensing\n    incoming.use(licenseMiddleware)\n\n    _.each(list(), (m => {\n      if (!m.enabled) {\n        return logger.debug('SKIPPING middleware:', m.name, ' [Reason=disabled]')\n      }\n\n      logger.debug('Loading middleware:', m.name)\n\n      if (m.type === 'incoming') {\n        incoming.use(m.handler)\n      } else {\n        outgoing.use(m.handler)\n      }\n    }))\n  }\n\n  const sendToMiddleware = type => event => {\n    let mw = type === 'incoming' ? incoming : outgoing\n    return mw.dispatch ? mw.dispatch(event) : mw(event)\n  }\n\n  const sendIncoming = sendToMiddleware('incoming')\n  const sendOutgoing = sendToMiddleware('outgoing')\n\n  incoming = outgoing = noopChain\n  middlewares = []\n  customizations = readCustomizations()\n\n  return {\n    load,\n    list,\n    register,\n    sendIncoming,\n    sendOutgoing,\n    getCustomizations: () => customizations,\n    setCustomizations,\n    resetCustomizations\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/middlewares.js","module.exports = require(\"mware\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mware\"\n// module id = 45\n// module chunks = 0","import path from 'path'\nimport fs from 'fs'\nimport Promise from 'bluebird'\n\nimport _ from 'lodash'\n\nimport listeners from './listeners'\nimport { resolveProjectFile, isDeveloping } from './util'\nimport LicenseGuard from '+/license'\n\nmodule.exports = ({ logger, version, projectLocation, db, botfile }) => {\n\n  const licensesPath = path.join(__dirname, '../licenses')\n\n  const getLicenses = () => {\n    const packageJsonPath = resolveProjectFile('package.json', projectLocation, true)\n    const { license } = JSON.parse(fs.readFileSync(packageJsonPath))\n\n    const agplContent = fs.readFileSync(path.join(licensesPath, 'LICENSE_AGPL3')).toString()\n    const botpressContent = fs.readFileSync(path.join(licensesPath, 'LICENSE_BOTPRESS')).toString()\n\n    return {\n      agpl: {\n        name: 'AGPL-3.0',\n        licensedUnder: license === 'AGPL-3.0',\n        text: agplContent\n      },\n      botpress: {\n        name: 'Botpress',\n        licensedUnder: license.toLowerCase().indexOf('botpress') >= 0,\n        text: botpressContent\n      }\n    }\n  }\n\n  const changeLicense = Promise.method((license) => {\n    const packageJsonPath = resolveProjectFile('package.json', projectLocation, true)\n\n    const licensePath = resolveProjectFile('LICENSE', projectLocation, true)\n    const licenseFileName = (license === 'AGPL-3.0') ? 'LICENSE_AGPL3' : 'LICENSE_BOTPRESS'\n    const licenseContent = fs.readFileSync(path.join(licensesPath, licenseFileName))\n\n    const pkg = JSON.parse(fs.readFileSync(packageJsonPath))\n    pkg.license = license\n\n    fs.writeFileSync(licensePath, licenseContent)\n    fs.writeFileSync(packageJsonPath, JSON.stringify(pkg, null, 2))\n  })\n\n  const middleware = listeners.hear(/^BOT_LICENSE$/, (event, next) => {\n    const packageJsonPath = resolveProjectFile('package.json', projectLocation, true)\n    const { license, name, author } = JSON.parse(fs.readFileSync(packageJsonPath))\n    const bp = event.bp\n\n    const response = `Bot:  ${name}\nCreated by: ${author}\nLicense: ${license}\nBotpress: ${bp.version}`\n\n    const userId = event.user && event.user.id\n\n    if (bp[event.platform] && bp[event.platform].sendText) {\n      bp[event.platform].sendText(userId, response)\n    } else {\n      bp.middlewares.sendOutgoing({\n        platform: event.platform,\n        type: 'text',\n        text: response,\n        raw: {\n          to: userId,\n          message: response,\n          responseTo: event\n        }\n      })\n    }\n  })\n\n  const guard = LicenseGuard(logger, db, botfile)\n  guard.start()\n\n  return {\n    getLicensing: async () => {\n      const licenses = getLicenses()\n      let currentLicense = _.find(licenses, { licensedUnder: true })\n      currentLicense = currentLicense || licenses.botpress\n\n      return Object.assign(await guard.getStatus(), {\n        text: currentLicense.text\n      })\n    },\n    changeLicense,\n    middleware,\n    getFeatures: guard.getFeatures\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/licensing.js","import _ from 'lodash'\n\nconst matches = function(conditions, event) {\n  if (!_.isPlainObject(conditions)) {\n    conditions = { text: conditions }\n  }\n\n  const pairs = _.toPairs(conditions)\n  return _.every(pairs, ([key, comparrer]) => {\n    const eventValue = _.get(event, key, null)\n\n    if (_.isFunction(comparrer)) {\n      return comparrer(eventValue, event) === true\n    } else if (_.isRegExp(comparrer)) {\n      const matches = comparrer.test(eventValue)\n      \n      if (matches && _.isString(eventValue)) {\n        if (_.isNil(event.captured)) {\n          event.captured = []\n        }\n        \n        const a = _.tail(comparrer.exec(eventValue))\n        a.forEach(m => event.captured.push(m))\n      }\n\n      return matches\n    } else {\n      return _.isEqual(comparrer, eventValue)\n    }\n  })\n}\n\nconst hear = function(conditions, callback) {\n  return (event, next) => {\n    let result = false;\n    if (_.isArray(conditions)) {\n      for (let conditionsItem of conditions) {\n        if (matches(conditionsItem, event)) {\n          result = true;\n          break;\n        }\n      }\n    } else {\n      result = matches(conditions, event);\n    }\n\n    if (result && _.isFunction(callback)) {\n      if (callback.length <= 1) {\n        if (_.isFunction(next)) { \n          next()\n        }\n        callback(event)\n      } else {\n        callback(event, next)\n      }\n    } else {\n      if (_.isFunction(next)) { \n        next()\n      }\n    }\n  }\n}\n\nmodule.exports = { hear, matches }\n\n\n\n// WEBPACK FOOTER //\n// ./src/listeners.js","module.exports = (logger, db, botfile) => ({\n  // There is no License Guard in the Open-Source / Free version\n  start: () => {},\n  getStatus: async () => {\n    return {\n      licensed: true,\n      name: 'Botpress Community',\n      text: null,\n      status: 'Active'\n    }\n  },\n  getFeatures: () => ({})\n})\n\n\n\n// WEBPACK FOOTER //\n// ./extensions/lite/license/index.js","import winston from 'winston'\nimport path from 'path'\nimport Promise from 'bluebird'\nimport moment from 'moment'\n\nimport { isDeveloping } from './util'\n\nmodule.exports = (dataLocation, logConfig) => {\n  const logger = new winston.Logger({\n    level: isDeveloping ? 'debug' : 'info',\n    transports: [\n      new (winston.transports.Console)({\n        prettyPrint: true,\n        colorize: true,\n        timestamp: () => moment().format('HH:mm:ss')\n      })\n    ]\n  })\n\n  logger.enableFileTransport = () => {\n    const logFile = path.join(dataLocation, logConfig.file)\n    logger.add(winston.transports.File, {\n      filename: logFile,\n      maxsize: logConfig.maxSize\n    })\n  }\n\n  logger.archiveToFile = () => {\n    const logFile = path.join(dataLocation, logConfig.file)\n\n    return Promise.resolve(logFile)\n  }\n\n  if (!logConfig.disableFileLogs) {\n    logger.enableFileTransport()\n  }\n\n  return logger\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/logger.js","module.exports = require(\"winston\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"winston\"\n// module id = 50\n// module chunks = 0","import jwt from 'jsonwebtoken'\nimport _ from 'lodash'\n\nimport Authentication from '+/authentication'\n\n/**\n * Security helper for botpress\n *\n * Constructor of following functions\n *\n *   - login(user, password, ip)\n *   - authenticate(token)\n *   - getSecret()\n *\n * It will find or create a secret.key in `dataLocation`, then setup the adminPassword for user login.\n *\n */\n\nmodule.exports = ({ dataLocation, securityConfig, db }) => {\n\n  const authentication = Authentication({ dataLocation, securityConfig, db })\n  const { tokenExpiry } = securityConfig\n\n  // login function that returns a {success, reason, token} object\n  // accounts for number of bad attempts\n  const login = async function(user, password, ip = 'all') {\n    const canAttempt = await authentication.attempt(ip)\n    if (!canAttempt) {\n      return { success: false, reason: 'Too many login attempts. Try again later.' }\n    }\n\n    const loginUser = await authentication.authenticate(user, password, ip)\n\n    if (loginUser) {\n      const secret = await authentication.getSecret()\n\n      return {\n        success: true,\n        token: jwt.sign({ user: loginUser }, secret, { expiresIn: tokenExpiry })\n      }\n    } else {\n      return {\n        success: false,\n        reason: 'Bad username / password'\n      }\n    }\n  }\n\n  /**\n   * @param {string} token\n   * @return {boolean} whether the token is valid\n   */\n  const authenticate = async function(token) {\n    try {\n      const secret = await authentication.getSecret()\n      const decoded = jwt.verify(token, secret)\n      const verified = authentication.verifyUser\n        ? await authentication.verifyUser(decoded)\n        : true\n      return verified && decoded.user\n    } catch (err) {\n      return false\n    }\n  }\n\n  return {\n    login,\n    authenticate,\n    getSecret: authentication.getSecret,\n    _authentication: authentication\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/security/index.js","module.exports = require(\"jsonwebtoken\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jsonwebtoken\"\n// module id = 52\n// module chunks = 0","import fs from 'fs'\nimport path from 'path'\nimport crypto from 'crypto'\nimport Promise from 'bluebird'\n\nmodule.exports = ({ dataLocation, securityConfig }) => {\n\n  // reading secret from data or creating new secret\n  let secret = ''\n  const secretPath = path.join(dataLocation, 'secret.key')\n\n  const createNewSecret = () => {\n    secret = crypto.randomBytes(256).toString()\n    fs.writeFileSync(secretPath, secret)\n    return secret\n  }\n\n  if (fs.existsSync(secretPath)) {\n    secret = fs.readFileSync(secretPath)\n  }\n\n  if (!secret || secret.length < 15) {\n    secret = createNewSecret()\n  }\n\n  const adminPassword = process.env.BOTPRESS_ADMIN_PASSWORD || securityConfig.password\n\n  // a per-ip cache that logs login attempts\n  let attempts = {}\n  let lastCleanTimestamp = new Date()\n  const { maxAttempts, resetAfter } = securityConfig\n\n  function attempt(ip) {\n    // reset the cache if time elapsed\n    if (new Date() - lastCleanTimestamp >= resetAfter) {\n      attempts = {}\n      lastCleanTimestamp = new Date()\n    }\n\n    return (attempts[ip] || 0) < maxAttempts\n  }\n\n  function authenticate(user, password, ip) {\n    if (typeof(user) === 'string' && user.toLowerCase() === 'admin' &&\n      typeof(password) === 'string' && password === adminPassword) {\n      attempts[ip] = 0\n      return {\n        id: 0,\n        email: 'admin@botpress.io',\n        first_name: 'Admin',\n        last_name: 'Admin',\n        avatar_url: null,\n        roles: ['admin']\n      }\n    } else {\n      attempts[ip] = (attempts[ip] || 0) + 1\n      return null\n    }\n  }\n\n  function getSecret() {\n    return secret\n  }\n\n  function resetSecret() {\n    return createNewSecret()\n  }\n\n  // Public API\n  return {\n    attempt: Promise.method(attempt),\n    authenticate: Promise.method(authenticate),\n    getSecret: Promise.method(getSecret),\n    resetSecret: Promise.method(resetSecret)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./extensions/lite/authentication/index.js","import _ from 'lodash'\nimport uuid from 'uuid'\n\nimport helpers from './database/helpers'\n\nimport { resolveModuleRootPath } from './util'\n\nconst notifications = ({ knex, modules, logger, events }) => {\n  // Internal use only\n  // Binds events to actions\n  function _bindEvents() {\n    events.on('notifications.getAll', async () => {\n      events.emit('notifications.all', await getInbox())\n    })\n\n    events.on('notifications.read', async id => {\n      await markAsRead(id)\n      events.emit('notifications.all', await getInbox())\n    })\n\n    events.on('notifications.allRead', async () => {\n      await markAllAsRead()\n      events.emit('notifications.all', await getInbox())\n    })\n\n    events.on('notifications.trashAll', async () => {\n      await archiveAll()\n      events.emit('notifications.all', await getInbox())\n    })\n  }\n\n  /**\n   * Create and append a new Notification in the Hub. Emits a `notifications.new` event.\n   * @param  {string} options.message     (required) The body message of the notification\n   * @param  {string} options.redirectUrl (optional) The URL the users will be redirected to \n   *                                      when clicking on the notification\n   * @param  {string} options.level       (optional) The level (info, success, error, warning). Defaults to `info`.\n   * @param  {bool} options.enableSound (optional) Whether the notification will trigger a buzzing sound \n   *                                    if a user is currently logged on the dashboard. (defaults to `false`)\n   * @return {Promise}\n   */\n  async function create({ message, redirectUrl, level, enableSound }) {\n    if (!message || typeof message !== 'string') {\n      throw new Error(\"'message' is mandatory and should be a string\")\n    }\n\n    if (!level || typeof level !== 'string' || !_.includes(['info', 'error', 'success'], level.toLowerCase())) {\n      level = 'info'\n    } else {\n      level = level.toLowerCase()\n    }\n\n    const callingFile = getOriginatingModule()\n    const callingModuleRoot = callingFile && resolveModuleRootPath(callingFile)\n\n    const module = _.find(modules, mod => {\n      return mod.root === callingModuleRoot\n    })\n\n    let options = {\n      moduleId: 'botpress',\n      icon: 'view_module',\n      name: 'botpress',\n      url: _.isString(redirectUrl) ? redirectUrl : '/'\n    }\n\n    if (module) {\n      // because the bot itself can send notifications\n      options = {\n        moduleId: module.name,\n        icon: module.settings.menuIcon,\n        name: module.settings.menuText,\n        url: redirectUrl\n      }\n\n      if (!redirectUrl || typeof url !== 'string') {\n        options.url = `/modules/${module.name}`\n      }\n    }\n\n    const notification = {\n      id: uuid.v4(),\n      message: message,\n      level: level,\n      moduleId: options.moduleId,\n      icon: options.icon,\n      name: options.name,\n      url: options.url,\n      date: new Date(),\n      sound: enableSound || false,\n      read: false\n    }\n\n    await knex('notifications')\n      .insert(toDatabase(knex, notification))\n      .then()\n\n    if (logger) {\n      const logMessage = `[notification::${notification.moduleId}] ${notification.message}`\n      const loggerLevel = logger[level] || logger.info\n      loggerLevel(logMessage)\n    }\n\n    if (events) {\n      events.emit('notifications.new', notification)\n    }\n  }\n\n  /**\n   * Returns all archived notifications\n   * @return {Promise<Array<Notification>>} The list of all archived notifications\n   */\n  async function getArchived() {\n    return knex('notifications')\n      .where({ archived: helpers(knex).bool.true() })\n      .orderBy('created_on', 'DESC')\n      .limit(100)\n      .then(rows => rows.map(row => fromDatabase(knex, row)))\n  }\n\n  /**\n   * Get the top 100 (unseen) notifications\n   * @return {Promise<Array<Notification>>} The list of all unseen notifications\n   */\n  async function getInbox() {\n    return knex('notifications')\n      .where({ archived: helpers(knex).bool.false() })\n      .orderBy('created_on', 'DESC')\n      .limit(100)\n      .then(rows => rows.map(row => fromDatabase(knex, row)))\n  }\n\n  /**\n   * Archives a single notification\n   * @param  {string} notificationId The id of the notification to archive\n   * @return {Promise}\n   */\n  async function archive(notificationId) {\n    return knex('notifications')\n      .where({ id: notificationId })\n      .update({ archived: helpers(knex).bool.true() })\n      .then()\n  }\n\n  /**\n   * Archives all notifications\n   * @return {Promise}\n   */\n  async function archiveAll() {\n    return knex('notifications')\n      .update({ archived: helpers(knex).bool.true() })\n      .then()\n  }\n\n  /**\n   * Marks a single notification as read (but doesn't archive it)\n   * @param  {string} notificationId The id of the notification to mark as read\n   * @return {Promise}\n   */\n  async function markAsRead(notificationId) {\n    return knex('notifications')\n      .where({ id: notificationId })\n      .update({ read: helpers(knex).bool.true() })\n      .then()\n  }\n\n  /**\n   * Marks all notifications as read (but doesn't archive them)\n   * @return {Promise}\n   */\n  async function markAllAsRead() {\n    return knex('notifications')\n      .update({ read: helpers(knex).bool.true() })\n      .then()\n  }\n\n  return {\n    // ----> Start of legacy API (DEPRECATED as of Botpress 1.1)\n    load: getInbox,\n    send: ({ message, url, level, sound }) => {\n      return create({ message, redirectUrl: url, level, enableSound: sound })\n    },\n    // End of legacy API <---\n    markAsRead,\n    markAllAsRead,\n    archiveAll,\n    archive,\n    getInbox,\n    getArchived,\n    create,\n    // internal API\n    _bindEvents\n  }\n}\n\nmodule.exports = notifications\n\nfunction getOriginatingModule() {\n  var origPrepareStackTrace = Error.prepareStackTrace\n  Error.prepareStackTrace = function(_, stack) {\n    return stack\n  }\n  var err = new Error()\n  var stack = err.stack\n  Error.prepareStackTrace = origPrepareStackTrace\n  stack.shift()\n\n  return stack[1].getFileName()\n}\n\nfunction toDatabase(knex, notification) {\n  return {\n    id: notification.id,\n    message: notification.message,\n    level: notification.level,\n    module_id: notification.moduleId,\n    module_icon: notification.icon,\n    module_name: notification.name,\n    redirect_url: notification.url,\n    created_on: helpers(knex).date.now(),\n    read: helpers(knex).bool.false(),\n    archived: helpers(knex).bool.false()\n  }\n}\n\nfunction fromDatabase(knex, row) {\n  return {\n    id: row.id,\n    message: row.message,\n    level: row.level,\n    moduleId: row.module_id,\n    icon: row.module_icon,\n    name: row.module_name,\n    url: row.redirect_url,\n    date: new Date(row.created_on),\n    sound: false,\n    read: helpers(knex).bool.parse(row.read)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/notifications.js","module.exports = require(\"uuid\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"uuid\"\n// module id = 55\n// module chunks = 0","import mware from 'mware'\nimport listeners from './listeners'\n\nmodule.exports = () => {\n\n  const chain = mware()\n  const handler = (event, next) => {\n    chain.run(event, function() {\n      next.apply(this, arguments)\n    })\n  }\n\n  const middleware = {\n    name: 'hear',\n    type: 'incoming',\n    order: 20,\n    module: 'botpress',\n    description: 'The built-in hear convenience middleware',\n    handler: handler\n  }\n\n  const hear = (condition, callback) => {\n    chain(listeners.hear(condition, callback))\n  }\n\n  return { hear, middleware }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/hear.js","import _ from 'lodash'\nimport listeners from './listeners'\n\nmodule.exports = bp => {\n\n  const middleware = {\n    name: 'fallback',\n    type: 'incoming',\n    order: 200,\n    module: 'botpress',\n    description: 'The built-in fallback handler. You may override this by implementing bp.fallbackHandler',\n    handler: (event, next) => {\n      if (_.isFunction(bp.fallbackHandler)) {\n        bp.fallbackHandler(event, next)\n      }\n    }\n  }\n\n  return { middleware }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/fallback.js","import Promise from 'bluebird'\nimport moment from 'moment'\n\nimport tables from './tables'\nimport kvs from './kvs'\n\nconst initializeCoreDatabase = knex => {\n  if (!knex) {\n    throw new Error('You must initialize the database before')\n  }\n\n  return Promise.mapSeries(tables, fn => fn(knex))\n}\n\nconst createKnex = async ({ sqlite, postgres }) => {\n  let _knex = null\n\n  if (postgres.enabled) {\n\n    // If we're passing in a postgres connection string, \n    // use that instead of the other params\n    if (postgres.connection) {\n      _knex = require('knex')({\n        client: 'pg',\n        connection: postgres.connection,\n        useNullAsDefault: true\n      })\n    } else {\n      _knex = require('knex')({\n        client: 'pg',\n        connection: {\n          host: postgres.host,\n          port: postgres.port,\n          user: postgres.user,\n          password: postgres.password,\n          database: postgres.database,\n          ssl: postgres.ssl\n        },\n        useNullAsDefault: true\n      })\n    }\n    \n  } else {\n    _knex = require('knex')({\n      client: 'sqlite3',\n      connection: { filename: sqlite.location },\n      useNullAsDefault: true,\n      pool: { \n        afterCreate: (conn, cb) => {\n          conn.run('PRAGMA foreign_keys = ON', cb)\n        }\n      }\n    })\n  }\n\n  await initializeCoreDatabase(_knex)\n  return _knex\n}\n\nmodule.exports = ({ sqlite, postgres }) => {\n\n  let knex = null\n\n  const getDb = async () => {\n    if (!knex) {\n      knex = createKnex({ sqlite, postgres })\n    }\n\n    return await knex\n  }\n\n  const saveUser = ({ id, platform, gender, timezone, locale, picture_url, first_name, last_name }) => {\n    const userId = platform + ':' + id\n    const userRow = {\n      id: userId,\n      userId: id,\n      platform: platform,\n      gender: gender || 'unknown',\n      timezone: timezone || null,\n      locale: locale || null,\n      created_on: moment(new Date()).toISOString(),\n      picture_url: picture_url,\n      last_name: last_name,\n      first_name: first_name\n    }\n\n    return getDb()\n    .then(knex => {\n      var query = knex('users').insert(userRow)\n      .where(function() {\n        return this\n          .select(knex.raw(1))\n          .from('users')\n          .where('id', '=', userId)\n      })\n\n      if (postgres.enabled) {\n        query = `${query} on conflict (id) do nothing`\n      } else { // SQLite\n        query = query.toString().replace(/^insert/i, 'insert or ignore')\n      }\n\n      return knex.raw(query)\n    })\n  }\n\n  let kvs_instance = null\n\n  const createKvs = async () => {\n    const knex = await getDb()\n    let _kvs = new kvs(knex)\n    await _kvs.bootstrap()\n    return _kvs\n  }\n\n  const getKvs = async () => {\n    if (!kvs_instance) {\n      kvs_instance = createKvs()\n    }\n\n    return await kvs_instance\n  }\n\n  const kvsGet = function() {\n    const args = arguments\n    return getKvs()\n    .then(instance => instance.get.apply(null, args))\n  }\n\n  const kvsSet = function() {\n    const args = arguments\n    return getKvs()\n    .then(instance => instance.set.apply(null, args))\n  }\n\n  return {\n    get: getDb,\n    saveUser,\n    location: postgres.enabled ? 'postgres' : sqlite.location,\n    kvs: { get: kvsGet, set: kvsSet }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/index.js","import { table_factories } from '+/database'\n\nmodule.exports = [\n  require('./users.js'),\n  require('./tags.js'),\n  require('./notifications.js'),\n  require('./content.js')\n].concat(table_factories)\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/tables.js","module.exports = {\n  table_factories: []\n}\n\n\n\n// WEBPACK FOOTER //\n// ./extensions/lite/database/index.js","/*\n  A table storing all the interlocutors (users) and their information\n*/\n\nimport helpers from './helpers'\n\nmodule.exports = knex => {\n  return helpers(knex).createTableIfNotExists('users', function (table) {\n    table.string('id').primary()\n    table.string('userId')\n    table.string('platform')\n    table.enu('gender', ['unknown', 'male', 'female'])\n    table.integer('timezone')\n    table.string('picture_url')\n    table.string('first_name')\n    table.string('last_name')\n    table.string('locale')\n    table.timestamp('created_on')\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/users.js","/*\n  A table storing all the user tags\n*/\n\nimport helpers from './helpers'\n\nmodule.exports = knex => {\n  return helpers(knex).createTableIfNotExists('users_tags', function (table) {\n    table.string('userId')\n    table.string('tag')\n    table.string('value')\n    table.timestamp('tagged_on')\n    table.unique(['userId', 'tag'])\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/tags.js","/*\n  A table storing all notifications\n*/\n\nimport helpers from './helpers'\n\nmodule.exports = knex => {\n  return helpers(knex).createTableIfNotExists('notifications', function(table) {\n    table.string('id').unique()\n    table.string('message')\n    table.string('level')\n    table.string('module_id')\n    table.string('module_icon')\n    table.string('module_name')\n    table.string('redirect_url')\n\n    table.timestamp('created_on')\n\n    table.boolean('read')\n    table.boolean('archived')\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/notifications.js","/*\n  Table storing the created content\n*/\n\nimport helpers from './helpers'\n\nmodule.exports = knex => {\n  return helpers(knex).createTableIfNotExists('content_items', function (table) {\n    table.string('id').primary()\n    table.text('data')\n    table.text('formData')\n    table.text('metadata')\n    table.string('categoryId')\n    table.text('previewText')\n    table.string('created_by')\n    table.timestamp('created_on')\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/content.js","import fs from 'fs'\nimport { resolveProjectFile } from './util'\n\nmodule.exports = (projectLocation) => {\n\n  const getBotInformation = () => {\n    const packageJsonPath = resolveProjectFile('package.json', projectLocation, true)\n    const packageJson = JSON.parse(fs.readFileSync(packageJsonPath))\n\n    return {\n      name: packageJson.name,\n      version: packageJson.version,\n      description: packageJson.description || '<no description>',\n      author: packageJson.author || '<no author>',\n      license: packageJson.license || 'AGPL-v3.0'\n    }\n  }\n\n  return { getBotInformation }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/about.js","import path from 'path'\nimport util from 'util'\n\nimport _ from 'lodash'\nimport Promise from 'bluebird'\n\nimport Engine from './engine'\nimport Proactive from './proactive'\n\nconst fs = Promise.promisifyAll(require('fs'))\n\nmodule.exports = ({ logger, middlewares, botfile, projectLocation, db, contentManager }) => {\n\n  const processors = {} // A map of all the platforms that can process outgoing messages\n  const templates = {} // A map of all the platforms templates\n  const storagePath = getStoragePath()\n\n  function registerConnector({ platform, processOutgoing, templates }) {\n\n    // TODO throw if templates not array\n    // TODO throw if platform not string\n    // TODO throw if processOutgoing not a function\n    // TODO throw if platform already registered\n\n    logger.verbose(`[UMM] Enabled for ${platform}`) // TODO remove that\n\n    processors[platform] = processOutgoing\n    templates[platform] = templates\n  }\n\n  function parse({ context, outputPlatform, markdown = null, incomingEvent = null }) {\n    // TODO throw if context empty\n\n    // TODO throw if markdown nil <<<==== Pick default markdown\n    // TODO throw if incomingEvents null <<<==== MOCK IT\n\n    const options = {\n      throwIfNoPlatform: true,\n      currentPlatform: outputPlatform\n    }\n\n    return Engine({ markdown, context, options, processors, incomingEvent })\n  }\n\n  function getTemplates() {\n    return _.merge({}, templates) // Return a deep copy\n  }\n\n  function getStoragePath() {\n    const resolve = file => path.resolve(projectLocation, file)\n    let ummPath = _.get(botfile, 'umm.contentPath')\n\n    if (!ummPath) {\n      const single = resolve('content.yml')\n      const folder = resolve('content')\n\n      if (fs.existsSync(single)) {\n        ummPath = single\n      } else if (fs.existsSync(folder)) {\n        ummPath = folder\n      } else {\n        throw new Error('UMM content location not found')\n      }\n    }\n\n    if (path.isAbsolute(ummPath)) {\n      return ummPath\n    } else {\n      return path.resolve(projectLocation, ummPath)\n    }\n  }\n\n  function saveDocument(content) {\n    if (_.isObject(content)) {\n      return Promise.map(Object.keys(content), fileName => {\n        const filePath = path.join(storagePath, fileName + '.yml')\n        return fs.writeFileAsync(filePath, content[fileName], 'utf8')\n      })\n    }\n\n    return fs.writeFileAsync(storagePath, content, 'utf8')\n  }\n\n  async function getDocument() {\n    const stats = await fs.statAsync(storagePath)\n\n    if (stats.isDirectory()) {\n      const files = await fs.readdirAsync(storagePath)\n      const contents = {}\n\n      files.forEach(file => {\n        if (!file.endsWith('.yml')) {\n          return\n        }\n\n        const filename = path.basename(file, path.extname(file))\n        contents[filename] = fs.readFileAsync(path.join(storagePath, file), 'utf8')\n      })\n\n      return Promise.props(contents)\n    }\n\n    return fs.readFileAsync(storagePath, 'utf8')\n  }\n\n  function doSendBloc(bloc) {\n    return Promise.mapSeries(bloc, message => {\n      if (message.__internal) {\n        if (message.type === 'wait') {\n          return Promise.delay(message.wait)\n        }\n      } else {\n        return middlewares.sendOutgoing(message)\n      }\n    })\n  }\n\n  async function sendBloc(incomingEvent, blocName, additionalData = {}) {\n    blocName = blocName[0] === '#' ? blocName.substr(1) : blocName\n\n    let initialData = {}\n\n    if (blocName.startsWith('!')) {\n      const itemName = blocName.substr(1)\n      const contentItem = await contentManager.getItem(itemName)\n\n      if (!contentItem) {\n        throw new Error(`Could not find content item with ID \"${itemName}\" in the Content Manager`)\n      }\n\n      const { categoryId: itemCategoryId } = contentItem\n\n      const itemCategory = await contentManager.getCategorySchema(itemCategoryId)\n\n      if (!itemCategory) {\n        throw new Error(`Could not find category \"${itemCategoryId}\" in the Content Manager` \n          + ` for item with ID \"${itemName}\"`)\n      }\n\n      const itemBloc = itemCategory.ummBloc\n      if (!_.isString(itemBloc) || !itemBloc.startsWith('#') || itemBloc.length <= 1) {\n        throw new Error(`Invalid UMM bloc \"${itemBloc}\" in category ${itemCategoryId} of Content Manager`)\n      }\n\n      blocName = itemBloc.substr(1)\n      initialData = Object.assign(initialData, contentItem.data)\n    }\n\n    const split = blocName.split('.')\n    let fileName = null\n\n    if (split.length === 2) {\n      fileName = split[0]\n      blocName = split[1]\n    }\n\n    let markdown = await getDocument()\n\n    // TODO Add more context\n    const fullContext = Object.assign({}, initialData, {\n      user: incomingEvent.user,\n      originalEvent: incomingEvent\n    }, additionalData)\n\n    if (_.isObject(markdown)) {\n      if (!fileName) {\n        throw new Error(`Unknown UMM bloc filename: ${blocName}`)\n      }\n\n      if (!markdown[fileName]) {\n        throw new Error(`UMM content ${fileName}.yml not found`)\n      }\n\n      markdown = markdown[fileName]\n    }\n\n    let blocs = parse({\n      context: fullContext,\n      outputPlatform: incomingEvent.platform,\n      markdown: markdown,\n      incomingEvent: incomingEvent\n    })\n\n    // TODO check if message OK and catch errors\n    // TODO throw if bloc does not exist\n\n    const bloc = blocs[blocName]\n\n    if (_.isNil(bloc)) {\n      const error = `[UMM] Bloc not defined (#${blocName})`\n      logger.error(error)\n      throw new Error(error)\n    }\n\n    return doSendBloc(bloc)\n  }\n\n  function processIncoming(event, next) {\n    event.reply = (blocName, additionalData = {}) => {\n      return sendBloc(event, blocName, additionalData)\n    }\n\n    next()\n  }\n\n  const incomingMiddleware = {\n    name: 'UMM.instrumentation',\n    type: 'incoming',\n    order: 2, // Should really be first\n    module: 'botpress',\n    description: 'Built-in Botpress middleware that adds a `.reply` to events. Works with UMM.',\n    handler: processIncoming\n  }\n\n  const proactiveMethods = Proactive({ sendBloc, db })\n\n  return { registerConnector, parse, getTemplates, incomingMiddleware, getDocument, saveDocument, ...proactiveMethods }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/umm/index.js","module.exports = require(\"util\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"util\"\n// module id = 67\n// module chunks = 0","import Mustache from 'mustache'\nimport yaml from 'js-yaml'\nimport ms from 'ms'\nimport _ from 'lodash'\n\nclass ParsingError extends Error {\n  constructor(bloc, instructionIndex, error) {\n    super(`Error parsing bloc '${bloc}' at instruction ${instructionIndex + 1}: ${error}`)\n    this.bloc = bloc\n    this.instructionIndex = instructionIndex\n    this.internalMessage = error\n    Error.captureStackTrace(this, ParsingError)\n  }\n}\n\nconst mapBlocs = (rawBlocs, options, processors, incomingEvent) => {\n\n  const {\n    currentPlatform,\n    throwIfNoPlatform = false\n  } = options\n\n  if (!currentPlatform && throwIfNoPlatform) {\n    throw new Error('You need to supply `currentplatform`')\n  }\n\n  return _.mapValues(rawBlocs, mapBloc)\n\n  function premapInstruction({ instruction, index, instructions, detectedPlatforms, bloc }) {\n\n    if (typeof instruction === 'string' || _.isArray(instruction)) {\n      return [{\n        text: instruction\n      }]\n    }\n\n    // Parsing conditionals\n    const evaluate = (val, exp) => {\n\n      if (typeof exp === 'boolean') {\n        return val === exp\n      } if (_.isArrayLike(exp)) {\n        return val ? !_.isEmpty(exp) : _.isEmpty(exp)\n      } else {\n        return val ? !!exp : !exp\n      }\n    }\n    \n    if (!_.isNil(instruction.if) && !_.isNil(instruction.unless)) {\n      throw new ParsingError(bloc, index, \"Message can't be both 'if' and 'else'.\")\n    }\n\n    if (!_.isNil(instruction.unless) && !evaluate(false, instruction.unless)) {\n      return []\n    }\n\n    if (!_.isNil(instruction.if) && !evaluate(true, instruction.if)) {\n      return []\n    }\n\n    // Parsing \".on\"\n    let i = Object.assign({}, instruction)\n    if (instruction.on) {\n      if (typeof instruction.on === 'string') {\n        const platforms = instruction.on.toLowerCase().split('+').map(_.trim)\n        if (!_.includes(platforms, currentPlatform.toLowerCase())) {\n          return []\n        } else {\n          i['__platformSpecific'] = true\n        }\n      } else if (_.isPlainObject(instruction.on)) {\n        const on = _.mapKeys(instruction.on, (__, key) => key.toLowerCase())\n\n        // This allows multiple platforms to be specified\n        // e.g. \"messenger+slack+web\"\n        _.keys(on).forEach(key => {\n          if (key.indexOf('+') >= 0) {\n            _.split(key, '+').forEach(alias => {\n              const trimmed = _.trim(alias)\n              on[trimmed] = _.merge({}, on[trimmed] || {}, on[key])\n            })\n          }\n        })\n\n        i = Object.assign(i, on[currentPlatform.toLowerCase()], { on: currentPlatform })\n      } else {\n        throw new ParsingError(bloc, index, '\"on\" must be a string or a plain object but was a ' \n          + typeof(instruction.on))\n      }\n    }\n\n    return [i]\n  }\n\n  function mapInstruction({ instruction, messages, bloc }) {\n    const ret = []\n\n    if (!_.isNil(instruction.wait)) {\n      ret.push({\n        __internal: true,\n        type: 'wait',\n        wait: _.isString(instruction.wait)\n          ? ms(instruction.wait || 1000 )\n          : (parseInt(instruction.wait) || 1000)\n      })\n    }\n\n    if (!_.isNil(instruction.typing)) {\n      instruction.typing = _.isString(instruction.typing)\n          ? ms(instruction.typing || 1000)\n          : (parseInt(instruction.typing) || 1000)\n    }\n\n    const raw = _.omit(instruction, ['unless', 'if', 'on', 'wait'])\n\n    if (!_.keys(raw).length) {\n      return ret\n    }\n\n    if (_.isArray(instruction.text)) {\n      instruction.text = _.sample(instruction.text)\n    }\n\n    const processor = currentPlatform && processors[currentPlatform]\n    if (processor) {\n      const msg = processor({ instruction, messages, blocName: bloc, event: incomingEvent })\n      if (msg) {\n        ret.push(msg)\n      }\n\n      return ret\n    }\n\n    throw new Error('Unsupported platform: ' + currentPlatform)\n  }\n\n  function mapBloc(bloc, name) {\n    // if the bloc isn't an array, error\n\n    const messages = []\n    const detectedPlatforms = []\n    const instructions = []\n\n    // Premapping allows for modifications, drop and addition of instructions\n    _.forEach(bloc, (instruction, index) => {\n      const add = premapInstruction({ \n        instruction, \n        index, \n        instructions: bloc, \n        detectedPlatforms, \n        bloc: name\n      })\n\n      add && _.forEach(add, i => instructions.push(i))\n    })\n\n    _.forEach(instructions, instruction => {\n      const m = mapInstruction({ instruction, messages, bloc: name })\n\n      if (!_.isNil(m)) {\n        // Messages can be null when the instruction only modified existing messages\n        m.forEach(message => messages.push(message))\n      }\n    })\n\n    return messages\n  }\n\n} // mapBlocs\n\nmodule.exports = ({ markdown, context, options, processors, incomingEvent }) => {\n  Mustache.parse(markdown)\n  const mustached = Mustache.render(markdown, context)\n\n  // The reason we support multi-doc is that people might want to separate documents\n  // Both visually and practically when the file gets large\n  const rawBlocs = {}\n  yaml.safeLoadAll(mustached, rawBloc => Object.assign(rawBlocs, rawBloc))\n\n  return mapBlocs(rawBlocs, options, processors, incomingEvent)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/umm/engine.js","module.exports = require(\"mustache\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mustache\"\n// module id = 69\n// module chunks = 0","module.exports = require(\"ms\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ms\"\n// module id = 70\n// module chunks = 0","import util from 'util'\n\nimport _ from 'lodash'\nimport Promise from 'bluebird'\n\nmodule.exports = ({ sendBloc, db }) => {\n\n  async function getUser(id) {\n    const knex = await db.get()\n    const users = await knex('users')\n      .where(function() {\n        if (id.indexOf(':') > 0) {\n          this.where({ id: id })\n        } else {\n          this.where('userId', id)\n        }\n      })\n      .limit(1).select('*')\n\n    if (!users || users.length <= 0) {\n      throw new Error(`User \"${id}\" not found in the database`)\n    }\n\n    return users[0]\n  }\n\n  /**\n   * Sends a proactive UMM message to a user\n   * @param  {string|object} user UserId or a full user object\n   * @param  {string} bloc The bloc name to send\n   * @param  {object} data Additional data to provide to the bloc\n   * @return {Promise}      A promise that the bloc is sent\n   */\n  async function sendToUser(user, bloc, data) {\n    if (!_.isString(bloc)) {\n      throw new Error('Invalid bloc id: ' + bloc)  \n    }\n\n    if (_.isString(user)) {\n      user = await getUser(user)\n    }\n\n    if (!user || !user.id) {\n      throw new Error('Invalid user object: ' + util.inspect(user))\n    }\n\n    const text = 'This is not a real event, it has been forged by UMM.'\n    const forgedEvent = {\n      platform: user.platform,\n      user: user,\n      type: 'proactive',\n      text: text,\n      raw: { forged: true, message: text, to: user && user.id }\n    }\n\n    return sendBloc(forgedEvent, bloc, data)\n  }\n\n  return { sendToUser }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/umm/proactive.js","import _ from 'lodash'\nimport helpers from './database/helpers'\n\nmodule.exports = ({ db }) => {\n  async function tag(userId, tag, value = true) {\n    const knex = await db.get()\n\n    tag = _.toUpper(tag)\n\n    if (await hasTag(userId, tag)) {\n      await knex('users_tags')\n        .where({ userId, tag })\n        .update({\n          userId,\n          tag,\n          value,\n          tagged_on: helpers(knex).date.now()\n        })\n        .then()\n    } else {\n      await knex('users_tags')\n        .insert({\n          userId,\n          tag,\n          value,\n          tagged_on: helpers(knex).date.now()\n        })\n        .then()\n    }\n\n    return true\n  }\n\n  async function untag(userId, tag) {\n    const knex = await db.get()\n\n    return knex('users_tags')\n      .where({ userId, tag: _.toUpper(tag) })\n      .del()\n      .then()\n  }\n\n  async function hasTag(userId, tag) {\n    const knex = await db.get()\n\n    return knex('users_tags')\n      .select('userId')\n      .where({ userId, tag: _.toUpper(tag) })\n      .limit(1)\n      .then(ret => ret.length > 0)\n  }\n\n  async function getTag(userId, tag) {\n    const knex = await db.get()\n\n    return knex('users_tags')\n      .select('value')\n      .where({ userId, tag: _.toUpper(tag) })\n      .limit(1)\n      .then()\n      .get(0)\n      .then(ret => ret && ret.value)\n  }\n\n  async function getTags(userId) {\n    const knex = await db.get()\n\n    return knex('users_tags')\n      .where({ userId })\n      .select('tag', 'value')\n      .then(tags => {\n        return _.map(tags, v => {\n          return { tag: v.tag, value: v.value }\n        })\n      })\n  }\n\n  async function list(limit = 50, from = 0) {\n    const knex = await db.get()\n\n    const isLite = helpers(knex).isLite()\n\n    const selectTags = isLite ? 'group_concat(tag) as tags' : \"string_agg(tag, ',') as tags\"\n\n    const subQuery = knex('users_tags')\n      .select('userId', knex.raw(selectTags))\n      .groupBy('userId')\n\n    return knex('users')\n      .leftJoin(knex.raw('(' + subQuery.toString() + ') AS t2'), 'users.id', '=', 't2.userId')\n      .select(\n        'users.userId',\n        'users.platform',\n        'users.gender',\n        'users.timezone',\n        'users.locale',\n        'users.picture_url',\n        'users.first_name',\n        'users.last_name',\n        'users.created_on',\n        't2.tags'\n      )\n      .orderBy('users.created_on', 'asc')\n      .offset(from)\n      .limit(limit)\n      .then(users =>\n        users.map(x =>\n          Object.assign(x, {\n            tags: (x.tags && x.tags.split(',')) || []\n          })\n        )\n      )\n  }\n\n  async function listWithTags(tags, limit = 50, from = 0) {\n    const knex = await db.get()\n\n    tags = _.filter(tags, t => _.isString(t)).map(t => t.toUpperCase())\n    const filterByTag = tag =>\n      knex('users_tags')\n        .select('userId')\n        .where('tag', tag)\n\n    const isLite = helpers(knex).isLite()\n    const selectTags = isLite ? 'group_concat(tag) as tags' : \"string_agg(tag, ',') as tags\"\n\n    let query = knex('users')\n    let i = 0\n\n    const subQuery = knex('users_tags')\n      .select('userId', knex.raw(selectTags))\n      .groupBy('userId')\n\n    tags.forEach(tag => {\n      const name = 't' + ++i\n      query = query.join(\n        knex.raw('(' + filterByTag(tag).toString() + ') AS ' + name),\n        'users.id',\n        '=',\n        name + '.userId'\n      )\n    })\n\n    return query\n      .leftJoin(knex.raw('(' + subQuery.toString() + ') AS tt'), 'users.id', '=', 'tt.userId')\n      .select(\n        'users.userId as userId',\n        'users.platform as platform',\n        'users.gender as gender',\n        'users.timezone as timezone',\n        'users.locale as locale',\n        'users.picture_url as picture_url',\n        'users.first_name as first_name',\n        'users.last_name as last_name',\n        'users.created_on as created_on',\n        'tt.tags as tags'\n      )\n      .orderBy('users.created_on', 'asc')\n      .offset(from)\n      .limit(limit)\n      .then(users =>\n        users.map(x =>\n          Object.assign(x, {\n            tags: (x.tags && x.tags.split(',')) || []\n          })\n        )\n      )\n  }\n\n  async function count() {\n    const knex = await db.get()\n\n    return knex('users')\n      .count('* as count')\n      .then()\n      .get(0)\n      .then(ret => parseInt(ret && ret.count))\n  }\n\n  return { tag, untag, hasTag, getTag, getTags, list, count, listWithTags }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/users.js","import path from 'path'\nimport fs from 'fs'\n\nimport _ from 'lodash'\nimport Promise from 'bluebird'\nimport glob from 'glob'\nimport uuid from 'uuid'\n\nimport helpers from '../database/helpers'\n\nmodule.exports = ({ db, botfile, projectLocation, logger }) => {\n  let categories = []\n\n  async function scanAndRegisterCategories() {\n    categories = []\n\n    const formDir = path.resolve(projectLocation, botfile.formsDir || './content/forms')\n\n    if (!fs.existsSync(formDir)) {\n      return categories\n    }\n\n    const searchOptions = { cwd: formDir }\n\n    const files = await Promise.fromCallback(callback => glob('**/*.form.js', searchOptions, callback))\n\n    files.forEach(file => {\n      try {\n        const filePath = path.resolve(formDir, './' + file)\n        const category = eval('require')(filePath) // Dynamic loading require eval for Webpack\n        const requiredFields = ['id', 'title', 'jsonSchema']\n\n        requiredFields.forEach(field => {\n          if (_.isNil(category[field])) {\n            throw new Error(field + ' is required but missing in Content Form file: ' + file)\n          }\n        })\n\n        category.id = category.id.toLowerCase()\n\n        if (_.find(categories, { id: category.id })) {\n          throw new Error('There is already a form with id=' + category.id)\n        }\n\n        categories.push(category)\n      } catch (err) {\n        logger.warn('[Content Manager] Could not load Form: ' + file, err)\n      }\n    })\n\n    return categories\n  }\n\n  async function listAvailableCategories() {\n    const knex = await db.get()\n\n    return await Promise.map(categories, async category => {\n      const count = await knex('content_items')\n        .where({ categoryId: category.id })\n        .select(knex.raw('count(*) as count'))\n        .then()\n        .get(0)\n        .then(row => (row && row.count) || 0)\n\n      return {\n        id: category.id,\n        title: category.title,\n        description: category.description,\n        count: count\n      }\n    })\n  }\n\n  async function getCategorySchema(categoryId) {\n    const category = _.find(categories, { id: categoryId })\n    if (_.isNil(category)) {\n      return null\n    }\n\n    return {\n      json: category.jsonSchema,\n      ui: category.uiSchema,\n      title: category.title,\n      description: category.description,\n      ummBloc: category.ummBloc\n    }\n  }\n\n  async function createOrUpdateCategoryItem({ itemId, categoryId, formData }) {\n    categoryId = categoryId && categoryId.toLowerCase()\n    const category = _.find(categories, { id: categoryId })\n\n    if (_.isNil(category)) {\n      throw new Error(`Category \"${categoryId}\" is not a valid registered categoryId`)\n    }\n\n    if (_.isNil(formData) || !_.isObject(formData)) {\n      throw new Error('\"formData\" must be a valid object')\n    }\n\n    let data = (category.computeFormData && (await category.computeFormData(formData))) || formData\n    const metadata = (category.computeMetadata && (await category.computeMetadata(formData))) || []\n    const previewText = (category.computePreviewText && (await category.computePreviewText(formData))) || 'No preview'\n\n    if (!_.isArray(metadata)) {\n      throw new Error('computeMetadata must return an array of string')\n    }\n\n    if (!_.isString(previewText)) {\n      throw new Error('computePreviewText must return a string')\n    }\n\n    if (_.isNil(data) || !_.isObject(data)) {\n      throw new Error('computeFormData must return a valid object')\n    }\n\n    let prefix = category.ummBloc || categoryId\n\n    if (prefix.startsWith('#')) {\n      prefix = prefix.substr(1)\n    }\n\n    const randomId = `${prefix}-${uuid\n      .v4()\n      .split('-')\n      .join('')\n      .substr(0, 6)}`\n\n    const knex = await db.get()\n\n    const body = {\n      data: JSON.stringify(data),\n      formData: JSON.stringify(formData),\n      metadata: '|' + metadata.join('|') + '|',\n      previewText: previewText,\n      created_by: 'admin',\n      created_on: helpers(knex).date.now()\n    }\n\n    if (itemId) {\n      return await knex('content_items')\n        .update(body)\n        .where({ id: itemId })\n    }\n\n    return await knex('content_items').insert(\n      Object.assign(\n        {\n          id: randomId,\n          categoryId: categoryId\n        },\n        body\n      )\n    )\n  }\n\n  async function listCategoryItems(categoryId, from = 0, count = 50, searchTerm) {\n    const knex = await db.get()\n\n    let items = null\n    let query = knex('content_items')\n\n    if (categoryId) {\n      query = query.where({\n        categoryId: categoryId\n      })\n    }\n\n    if (searchTerm) {\n      query = query.andWhere('metadata', 'like', `%${searchTerm}%`).orWhere('formData', 'like', `%${searchTerm}%`)\n    }\n\n    items = await query\n      .orderBy('created_on')\n      .offset(from)\n      .limit(count)\n      .then()\n\n    return items.map(transformCategoryItem)\n  }\n\n  function transformCategoryItem(item) {\n    if (!item) {\n      return item\n    }\n\n    let metadata = item.metadata || ''\n    metadata = _.filter(metadata.split('|'), i => i.length > 0)\n\n    return {\n      id: item.id,\n      data: JSON.parse(item.data),\n      formData: JSON.parse(item.formData),\n      categoryId: item.categoryId,\n      previewText: item.previewText,\n      metadata: metadata,\n      createdBy: item.created_by,\n      createdOn: item.created_on\n    }\n  }\n\n  async function deleteCategoryItems(ids) {\n    if (!_.isArray(ids) || _.some(ids, id => !_.isString(id))) {\n      throw new Error('Expected an array of Ids to delete')\n    }\n\n    const knex = await db.get()\n\n    return knex('content_items')\n      .whereIn('id', ids)\n      .del()\n  }\n\n  async function getItem(itemId) {\n    const knex = await db.get()\n\n    const item = await knex('content_items')\n      .where({ id: itemId })\n      .then()\n      .get(0)\n      .then()\n\n    return transformCategoryItem(item)\n  }\n\n  async function getItemsByMetadata(metadata) {\n    const knex = await db.get()\n\n    const items = await knex('content_items')\n      .where('metadata', 'like', '%|' + metadata + '|%')\n      .then()\n\n    return transformCategoryItem(items)\n  }\n\n  async function exportContent(ids = null) {\n    const knex = await db.get()\n\n    let query = knex('content_items').select('*')\n\n    if (ids) {\n      query = query.whereIn('id', ids)\n    }\n\n    const items = query.then()\n\n    return items.map(item => transformCategoryItem(item))\n  }\n\n  async function importContent(documents) {\n    const knex = await db.get()\n\n    return Promise.mapSeries(documents, doc => {\n      if (!doc.id || !doc.formData || !doc.categoryId) {\n        throw new Error('Invalid data')\n      }\n\n      const row = {\n        data: JSON.stringify(doc.data),\n        formData: JSON.stringify(doc.formData),\n        metadata: '|' + doc.metadata.join('|') + '|',\n        previewText: doc.previewText,\n        created_by: 'admin',\n        created_on: helpers(knex).date.now(),\n        id: doc.id,\n        categoryId: doc.categoryId\n      }\n\n      return knex('content_items')\n        .insert(row)\n        .then()\n        .catch(err => {\n          return knex('content_items')\n            .where({ id: doc.id })\n            .update(row)\n            .then()\n        })\n    })\n  }\n\n  return {\n    scanAndRegisterCategories,\n    listAvailableCategories,\n    getCategorySchema,\n\n    createOrUpdateCategoryItem,\n    listCategoryItems,\n    deleteCategoryItems,\n\n    getItem,\n    getItemsByMetadata,\n\n    exportContent,\n    importContent\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/content/service.js","module.exports = require(\"glob\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"glob\"\n// module id = 74\n// module chunks = 0","import EventEmmiter from 'eventemitter2'\nimport ms from 'ms'\nimport _ from 'lodash'\nimport Promise from 'bluebird'\n\nimport { matches } from './listeners'\n\nconst INTERVAL_MSGS = 5000\n\nconst formatMessage = (msg, initialEvent) => {\n  if (typeof msg === 'string') {\n    return {\n      platform: initialEvent.platform,\n      user: initialEvent.user,\n      type: 'text',\n      text: msg,\n      raw: {\n        user: initialEvent.user,\n        message: msg\n      }\n    }\n  } else if (typeof msg === 'function') {\n    // This is a 'wrapped' or 'delayed' execution message\n    // It is going to be evaluated at send time, this this has a risk of failing\n    // If the function execution fails\n    return msg\n  } else {\n    if (msg && msg.type && msg.platform && msg.text) {\n      return msg\n    } else {\n      throw new Error('Invalid message: ', msg)\n    }\n  }\n}\n\nconst formatBloc = (blocName, data = {}) => {\n  if (!_.isString(blocName)) {\n    throw new Error('Invalid bloc name, espected string')\n  }\n\n  return {\n    isBloc: true,\n    bloc: blocName,\n    data: data\n  }\n}\n\nconst isBlocCall = args => {\n  return _.isString(args[0]) && args[0].startsWith('#')\n}\n\nconst validateHandlers = handlers => {\n  if (_.isFunction(handlers)) {\n    return [{\n      default: true,\n      callback: handlers\n    }]\n  }\n\n  if (!_.isArray(handlers)) {\n    throw new Error('Invalid handler(s) for question, expected a function or an array of handlers (see doc).')\n  }\n\n  return handlers\n}\n\nclass Thread extends EventEmmiter {\n\n  constructor(name, bp, convo) {\n    super()\n    this.initialEvent = convo.initialEvent\n    this.name = name\n    this.bp = bp\n    this.convo = convo\n    this.queue = [] // Queue of messages and questions to say / ask next\n    this.archive = [] // Archive of unqueued questions. We store them so we can re-create (restart) the thread.\n    this.waiting = false // Thread is waiting when it asked for a question\n    this._last = null\n  }\n\n  enqueue(message) {\n    this.queue.push(message)\n    this.archive.push(message)\n  }\n\n  addMessage(msg) {\n    return this.add({ \n      content: arguments[0],\n      data: arguments[1],\n      handler: null,\n      condition: null\n    })\n  }\n\n  // Two signatures possible:\n  // msg, handlers\n  // bloc, data, handlers\n  addQuestion(msg) {\n    const handlers = validateHandlers(_.last(arguments))\n    const content = arguments[0]\n    const data = arguments.length >= 3 ? arguments[1] : null\n\n    return this.add({ \n      content, \n      handler: handlers, \n      condition: null, \n      data \n    })\n  }\n\n  /* { \n    content: 'string or #umm'\n    handler?: function(response) // If no handler = message + next()\n    condition?: function() // return bool|Promise<bool> to execute it or not\n    data?: object|func<object>|func<Promise<object>> to feed data to the UMM\n  } */\n  add({ content, handler, condition, data }) {\n    const handlers = handler ? validateHandlers(handler) : null\n    const type = handlers ? 'question' : 'message'\n\n    const isBloc = _.isString(content) && content.startsWith('#')\n\n    if (isBloc) {\n      return this.enqueue({\n        type: type,\n        message: formatBloc(content, data),\n        handlers: handlers,\n        condition: condition\n      })\n    }\n    \n    // Add raw message question\n    const message = formatMessage(content, this.initialEvent)\n\n    this.enqueue({\n      type: type,\n      message: message,\n      handlers: handlers,\n      condition: condition\n    })\n  }\n\n  peek() {\n    return this.queue.length > 0 ? this.queue[0] : null\n  }\n\n  async dequeue() {\n    let msg = null\n\n    while(true) {\n      msg = this.queue.shift()\n\n      if (msg && msg.condition && _.isFunction(msg.condition)) {\n        const exec = await msg.condition()\n        if (!exec) {\n          continue\n        }\n      }\n\n      break\n    }\n\n    this._last = msg\n    this.waiting = msg && msg.type === 'question'\n\n    if (!msg) {\n      this.emit('done')\n    }\n\n    return msg\n  }\n\n  process(event) {\n    const handlers = (this.waiting && this._last && this._last.handlers) || []\n\n    for (let handler of handlers) {\n      if (handler.pattern && matches(handler.pattern, event)) {\n        if (_.isRegExp(handler.pattern)) {\n          const match = handler.pattern.exec(event.text)\n          if (match) {\n            event.match = match[1]\n          }\n        }\n\n        handler.callback && handler.callback(event)\n        return // Interrupt further processing\n      }\n    }\n\n    const defaultHandler = _.find(handlers, { default: true })\n\n    defaultHandler && defaultHandler.callback && defaultHandler.callback(event)\n  }\n\n  repeat() {\n    return this._last && this._last.message\n  }\n\n  restart() {\n    this.queue = this.archive.map(i => i)\n    this._last = null\n    this.waiting = false\n  }\n}\n\nclass Conversation extends EventEmmiter {\n\n  constructor({ initialEvent, middleware, logger, messageTypes, clockSpeed = 500 }) {\n    super()\n    this.logger = logger\n    this.middleware = middleware\n    this.initialEvent = initialEvent\n    this._threads = {}\n    this.currentThread = null\n    this.defaultThread = this.createThread('default')\n    this.status = 'new'\n    this.get = this._get\n    this.set = this._set\n    this._cache = {}\n    this.intervalBetweenMessages = INTERVAL_MSGS\n    this._timeoutHandle = null\n    this._timeoutInterval = ms('5 minutes')\n    this._useTimeout = false\n    this._clock = setInterval(::this.tick, clockSpeed)\n    this._clockSpeed = clockSpeed\n    this._processing = false\n    this._sendLock = false\n    this.messageTypes = messageTypes || ['message', 'text', 'quick_reply']\n    this._outgoing = []\n    this.endWhenDone = true\n\n    this.sendNext() // Infinite loop. Must be called only once.\n  }\n\n  get threads() {\n    return Object.assign({}, this._threads)\n  }\n\n  async sendNext() {\n    if (this._sendLock) {\n      return\n    } else {\n      this._sendLock = true\n    }\n\n    try {\n      const msg = this._outgoing.shift()\n\n      if (msg) {\n\n        if (msg.isBloc === true) {\n          // Send bloc\n          if (!this.initialEvent || !this.initialEvent.reply) {\n            throw new Error(\"Convo doesn't have default event or does not support UMM\")\n          }\n\n          let data = msg.data\n\n          if (_.isFunction(data)) {\n            data = await Promise.resolve(data())\n          }\n\n          await Promise.resolve(this.initialEvent.reply(msg.bloc, data))\n        } else {\n          // Raw message\n          await Promise.resolve(this.middleware\n          && this.middleware.sendOutgoing \n          && this.middleware.sendOutgoing(msg))\n        }\n      }\n\n      await Promise.delay(this._clockSpeed)\n      \n      if (this.status === 'active' || this._outgoing.length > 0) {\n        setImmediate(::this.sendNext)\n      }\n    } finally {\n      this._sendLock = false\n    }\n  }\n\n  teardown() {\n    // Dispose of timeouts and intervals\n    clearInterval(this._clock)\n    this.clearTimeout()\n    this.status = 'destroyed'\n  }\n\n  getCurrentThread() {\n    return this._threads[this.currentThread]\n  }\n\n  tick() {\n    const thread = this.getCurrentThread()\n    if (this.status === 'active' && !thread.waiting) {\n      this.next()\n    }\n  }\n\n  clearTimeout() {\n    if (this._timeoutHandle) {\n      this.clearTimeout(this._timeoutHandle)\n    }\n  }\n\n  resetTimeout() {\n    this.clearTimeout()\n\n    this._timeoutHandle = this._useTimeout && setTimeout(() => {\n      // TODO If there's a timeout thread, switch to it\n      this.emit('timeout')\n    }, this._timeoutInterval)\n  }\n\n  createThread(name) {\n    const thread = new Thread(name, this.bp, this)\n    this._threads[name] = thread\n\n    if (!this.currentThread) {\n      this.currentThread = name\n    }\n\n    return thread\n  }\n\n  async switchTo(name, restart = true) {\n    if (this.currentThread === name) {\n      return // Don't switch if it's already the current thread\n    }\n\n    if (!this._threads[name]) {\n      throw new Error(`Thread \"${name}\" doesn't exist`)\n    }\n\n    const before = await this.emitAsync('beforeSwitch', name)\n    if (_.some(before, a => a === false)) {\n      return // Aborted thread switch\n    }\n\n    this.currentThread = name\n\n    if (restart) {\n      const thread = this.getCurrentThread()\n      thread && thread.restart()\n    }\n\n    this.emit('switched', name)\n  }\n\n  async next() {\n    const thread = this.getCurrentThread()\n\n    if (!thread.peek()) {\n      return this.endWhenDone && this.stop('done')\n    }\n\n    const msg = await thread.dequeue()\n    if (msg) {\n      let message = msg.message\n\n      if (typeof message === 'function') {\n        // Executes (unwrap) the message on the fly\n        message = msg.message()\n      }\n\n      this.say(message, this.initialEvent)\n    }\n  }\n\n  async processIncoming(event) {\n\n    if (!_.includes(this.messageTypes, event.type)) {\n      return\n    }\n\n    this._timeoutHandle && this.resetTimeout()\n    const before = await this.emitAsync('beforeProcessing', event)\n    if (_.some(before, a => a === false)) {\n      return\n    }\n\n    const thread = this.getCurrentThread()\n    thread && thread.waiting && thread.process(event)\n  }\n\n  setTimeout(timeout) {\n    this._useTimeout = true\n    this._timeoutInterval = typeof timeout === 'number' ? timeout : ms(timeout)\n    this.resetTimeout()\n  }\n\n  async say(msg) {\n    let message = null\n\n    if (msg && msg.isBloc === true) {\n      message = msg\n    } else {\n      message = isBlocCall(arguments)\n        ? formatBloc(...arguments)\n        : formatMessage(msg, this.initialEvent)\n    }\n\n    this._outgoing.push(message)\n\n    if (this.status !== 'active') {\n      this.sendNext() // restart sending process once\n    }\n  }\n\n  activate() {\n    if (this.status === 'new') {\n      this.status = 'active'\n      this.emit('activated')\n    } else {\n      throw new Error('Conversation was already activated')\n    }\n  }\n\n  getStatus() {\n    return this.status\n  }\n\n  _get(name) {\n    return this._cache[name]\n  }\n\n  _set(name, value) {\n    this._cache[name] = value\n  }\n\n  async repeat() {\n    const thread = this._threads[this.currentThread]\n    const msg = thread && thread.repeat()\n\n    if (msg) {\n      return this.say(msg)\n    }\n  }\n\n  stop(reason) {\n    this.status = reason\n    this.emit(reason)\n\n    if (reason !== 'stop') {\n      this.emit('stop', reason)\n    }\n    this.teardown()\n  }\n}\n\nmodule.exports = ({ logger, middleware, clockSpeed = 500 }) => {\n  let convos = []\n\n  const belongsToConvo = (convo, event) => {\n    const initial = convo.initialEvent\n\n    return convo.initialEvent.platform === event.platform\n      && _.get(initial, 'user.id', '') === _.get(event, 'user.id', '')\n  }\n\n  middleware.register({\n    name: 'conversations',\n    type: 'incoming',\n    order: 25,\n    module: 'botpress',\n    description: 'Built-in conversation flow manager',\n    handler: function(event, next) {\n\n      // Clean up and free from memory ended conversations\n      convos = _.filter(convos, c => {\n        return _.includes(['new', 'active'], c.status)\n      })\n\n      for (let convo of convos) {\n        if (belongsToConvo(convo, event) && convo.status === 'active') {\n          convo.processIncoming(event)\n          return // Stop the processing, only one convo per event. Swallow the event\n        }\n      }\n\n      next && next() // Don't swallow the event\n    }\n  })\n\n  const validateEvent = event => {\n    if (!event || !event.type || !event.platform) {\n      throw new Error('You need to pass an original incoming event to start a conversation')\n    }\n  }\n\n  function start(event, callback) {\n    const convo = create(event)\n    callback && callback(convo)\n\n    convo.activate()\n    return convo\n  }\n\n  function create(event) {\n    validateEvent(event)\n    const convo = new Conversation({\n      logger,\n      middleware,\n      clockSpeed,\n      initialEvent: event\n    })\n    convos.push(convo)\n    return convo\n  }\n\n  function find(event) {\n    for (let convo of convos) {\n      if (belongsToConvo(convo, event) && convo.status === 'active') {\n        return convo\n      }\n    }\n  }\n\n  function destroy() {\n    for (let convo of convos) {\n      convo.teardown()\n    }\n\n    convos = []\n  }\n\n  return { start, create, find, destroy }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/conversations.js","module.exports = {\n\t\"name\": \"botpress\",\n\t\"description\": \"The world's first CMS for bots. Easily create, manage and extend chatbots.\",\n\t\"version\": \"1.1.2\",\n\t\"author\": \"Botpress\",\n\t\"bin\": {\n\t\t\"bp\": \"./bin/botpress\",\n\t\t\"botpress\": \"./bin/botpress\"\n\t},\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/botpress/botpress/issues\"\n\t},\n\t\"dependencies\": {\n\t\t\"axios\": \"^0.15.2\",\n\t\t\"babel-polyfill\": \"^6.23.0\",\n\t\t\"bluebird\": \"^3.4.6\",\n\t\t\"body-parser\": \"^1.15.2\",\n\t\t\"chalk\": \"^1.1.3\",\n\t\t\"commander\": \"^2.9.0\",\n\t\t\"dotenv\": \"^4.0.0\",\n\t\t\"email-templates\": \"^2.5.4\",\n\t\t\"eventemitter2\": \"^2.1.3\",\n\t\t\"express\": \"^4.14.0\",\n\t\t\"formidable\": \"^1.1.1\",\n\t\t\"glob\": \"^7.1.2\",\n\t\t\"handlebars\": \"^4.0.6\",\n\t\t\"howler\": \"^2.0.3\",\n\t\t\"js-yaml\": \"^3.8.4\",\n\t\t\"jsonwebtoken\": \"^7.1.9\",\n\t\t\"knex\": \"^0.12.6\",\n\t\t\"lodash\": \"^4.16.4\",\n\t\t\"moment\": \"^2.15.1\",\n\t\t\"ms\": \"^0.7.1\",\n\t\t\"multer\": \"^1.3.0\",\n\t\t\"mustache\": \"^2.3.0\",\n\t\t\"mware\": \"0.0.3\",\n\t\t\"node-machine-id\": \"^1.1.3\",\n\t\t\"nodemailer\": \"^2.7.2\",\n\t\t\"pg\": \"^6.1.2\",\n\t\t\"prompt\": \"^1.0.0\",\n\t\t\"react-codemirror\": \"^1.0.0\",\n\t\t\"react-jsonschema-form\": \"^0.49.0\",\n\t\t\"socket.io\": \"^1.5.0\",\n\t\t\"socket.io-client\": \"^2.0.3\",\n\t\t\"socketio-jwt\": \"^4.5.0\",\n\t\t\"source-map-support\": \"^0.4.6\",\n\t\t\"sqlite3\": \"3.1.8\",\n\t\t\"universal-analytics\": \"^0.4.8\",\n\t\t\"uuid\": \"^3.0.0\",\n\t\t\"winston\": \"^2.2.0\"\n\t},\n\t\"devDependencies\": {\n\t\t\"autoprefixer\": \"^6.5.3\",\n\t\t\"babel-cli\": \"^6.16.0\",\n\t\t\"babel-core\": \"^6.18.0\",\n\t\t\"babel-eslint\": \"^7.1.0\",\n\t\t\"babel-loader\": \"^6.2.5\",\n\t\t\"babel-plugin-root-import\": \"^5.1.0\",\n\t\t\"babel-plugin-transform-decorators-legacy\": \"^1.3.4\",\n\t\t\"babel-plugin-transform-object-rest-spread\": \"^6.16.0\",\n\t\t\"babel-preset-latest\": \"^6.16.0\",\n\t\t\"babel-preset-react\": \"^6.11.1\",\n\t\t\"babel-preset-stage-0\": \"^6.16.0\",\n\t\t\"babel-register\": \"^6.16.3\",\n\t\t\"bootstrap\": \"^3.3.7\",\n\t\t\"chai\": \"^3.5.0\",\n\t\t\"classnames\": \"^2.2.5\",\n\t\t\"copy-webpack-plugin\": \"^4.0.0\",\n\t\t\"css-loader\": \"^0.25.0\",\n\t\t\"eslint\": \"^3.9.0\",\n\t\t\"exports-loader\": \"^0.6.3\",\n\t\t\"expose-loader\": \"^0.7.1\",\n\t\t\"extract-text-webpack-plugin\": \"^1.0.1\",\n\t\t\"file-loader\": \"^0.9.0\",\n\t\t\"hard-source-webpack-plugin\": \"^0.3.7\",\n\t\t\"history\": \"^2.1.2\",\n\t\t\"json-loader\": \"^0.5.4\",\n\t\t\"keymirror\": \"^0.1.1\",\n\t\t\"mocha\": \"^3.1.2\",\n\t\t\"node-sass\": \"^3.13.1\",\n\t\t\"npm-watch\": \"^0.1.6\",\n\t\t\"nuclear-js\": \"^1.4.0\",\n\t\t\"nuclear-js-react-addons\": \"^0.4.1\",\n\t\t\"postcss-loader\": \"^1.1.1\",\n\t\t\"prop-types\": \"^15.5.8\",\n\t\t\"react\": \"^15.3.1\",\n\t\t\"react-addons-css-transition-group\": \"^15.3.1\",\n\t\t\"react-addons-update\": \"^15.4.2\",\n\t\t\"react-bootstrap\": \"^0.30.3\",\n\t\t\"react-bootstrap-button-loader\": \"^1.0.7\",\n\t\t\"react-dom\": \"^15.3.1\",\n\t\t\"react-dropzone\": \"^4.1.3\",\n\t\t\"react-emoji\": \"^0.4.4\",\n\t\t\"react-fontawesome\": \"^1.2.0\",\n\t\t\"react-ga\": \"^2.1.2\",\n\t\t\"react-markdown\": \"^2.4.5\",\n\t\t\"react-router\": \"^2.8.1\",\n\t\t\"react-sidebar\": \"^2.2.1\",\n\t\t\"react-sortable\": \"^1.2.0\",\n\t\t\"sass-loader\": \"^4.0.2\",\n\t\t\"script-loader\": \"^0.7.0\",\n\t\t\"simple-line-icons\": \"^2.4.1\",\n\t\t\"sinon\": \"^1.17.7\",\n\t\t\"style-loader\": \"^0.13.1\",\n\t\t\"tmp\": \"0.0.31\",\n\t\t\"uglifyjs-webpack-plugin\": \"^0.4.3\",\n\t\t\"webpack\": \"^1.13.2\",\n\t\t\"webpack-node-externals\": \"^1.5.4\"\n\t},\n\t\"engines\": {\n\t\t\"node\": \">=4.6.0\"\n\t},\n\t\"homepage\": \"https://github.com/botpress/botpress#readme\",\n\t\"keywords\": [\n\t\t\"bots\",\n\t\t\"chatbots\",\n\t\t\"bot framework\",\n\t\t\"messenger\",\n\t\t\"facebook\",\n\t\t\"slack\",\n\t\t\"botkit\",\n\t\t\"microsoft bot framework\",\n\t\t\"bot builder\",\n\t\t\"bot\",\n\t\t\"chatbot\",\n\t\t\"api\"\n\t],\n\t\"license\": \"AGPL-3.0\",\n\t\"main\": \"lib/node.bundle.js\",\n\t\"repository\": \"git+https://github.com/botpress/botpress.git\",\n\t\"os\": [\n\t\t\"darwin\",\n\t\t\"linux\",\n\t\t\"win32\"\n\t],\n\t\"scripts\": {\n\t\t\"prepare\": \"npm run compile\",\n\t\t\"compile\": \"./build.sh\",\n\t\t\"test\": \"BABEL_ENV=tests mocha --compilers js:babel-core/register --require tests/index.js tests/** extensions/**/tests/**\",\n\t\t\"watch\": \"npm-watch\",\n\t\t\"lint\": \"eslint {src,extensions}/**/*.js*\"\n\t},\n\t\"watch\": {\n\t\t\"compile\": {\n\t\t\t\"patterns\": [\n\t\t\t\t\"src\",\n\t\t\t\t\"extensions\"\n\t\t\t],\n\t\t\t\"extensions\": \"js,jsx,scss,json,html\"\n\t\t}\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./package.json\n// module id = 76\n// module chunks = 0","module.exports = () => {}\n\n\n// WEBPACK FOOTER //\n// ./extensions/lite/emails/index.js","module.exports = bp => ({\n  install: () => {},\n  uninstall: () => {}\n})\n\n\n\n// WEBPACK FOOTER //\n// ./extensions/lite/mediator/index.js","import express from 'express'\nimport http from 'http'\n\nimport Socket from './socket'\nimport Static from './static'\nimport Api from './api'\n\nmodule.exports = bp => {\n\n  async function serveApi(app) {\n    const api = Api(bp)\n    return api.install(app)\n  }\n\n  async function serveSocket(server) {\n    const socket = Socket(bp)\n    return socket.install(server)\n  }\n\n  async function serveStatic(app) {\n    const staticStuff = Static(bp)\n    return staticStuff.install(app)\n  }\n\n  async function start() {\n    const app = express()\n    const server = http.createServer(app)\n    const port = bp.botfile.port\n\n    await serveApi(app)\n    await serveSocket(server)\n    await serveStatic(app)\n\n    return new Promise(resolve => {\n      server.listen(port, () => resolve())\n    })\n  }\n\n  return { start }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/index.js","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 80\n// module chunks = 0","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 81\n// module chunks = 0","import _ from 'lodash'\nimport socketio from 'socket.io'\nimport socketioJwt from 'socketio-jwt'\n\nmodule.exports = bp => {\n\n  async function install(server) {\n    const io = socketio(server)\n\n    const admin = io.of('/admin')\n    const guest = io.of('/guest')\n\n    if (bp.botfile.login.enabled) {\n      admin.use(socketioJwt.authorize({\n        secret: await bp.security.getSecret(),\n        handshake: true\n      }))\n    }\n\n    admin.on('connection', function(socket) {\n      const visitorId = _.get(socket, 'handshake.query.visitorId')\n      bp.stats.track('socket', 'connected')\n\n      socket.on('event', function(event) {\n        bp.events.emit(event.name, event.data, 'client', {\n          visitorId: visitorId,\n          socketId: socket.id,\n          guest: false,\n          admin: true\n        })\n      })\n    })\n\n    guest.on('connection', function(socket) {\n      const visitorId = _.get(socket, 'handshake.query.visitorId')\n      bp.stats.track('socket', 'connected')\n\n      if (visitorId && visitorId.length > 0) {\n        socket.join('visitor:' + visitorId)\n      }\n\n      socket.on('event', function(event) {\n        bp.events.emit(event.name, event.data, 'client', {\n          socketId: socket.id,\n          visitorId: visitorId,\n          guest: true,\n          admin: false\n        })\n      })\n    })\n\n    bp.events.onAny(function(event, data, from) {\n      if (from === 'client') {\n        return // we sent this ourselves\n      }\n\n      let c = event.startsWith('guest.') ? guest : admin\n\n      if (data && (data.__socketId || data.__room)) {\n        // Send only to this socketId or room\n        return c.to(data.__socketId || data.__room).emit('event', {\n          name: event,\n          data: data\n        })\n      }\n\n      // broadcast event to the front-end clients\n      c.emit('event', {\n        name: event,\n        data: data\n      })\n    })\n  }\n\n  return { install }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/socket.js","module.exports = require(\"socket.io\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"socket.io\"\n// module id = 83\n// module chunks = 0","module.exports = require(\"socketio-jwt\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"socketio-jwt\"\n// module id = 84\n// module chunks = 0","/* global BP_EDITION */\n\nimport Promise from 'bluebird'\nimport express from 'express'\nimport path from 'path'\nimport fs from 'fs'\nimport ms from 'ms'\nimport util from '../util'\n\nmodule.exports = bp => {\n\n  function serveModule(app, module) {\n    const name = module.name\n    const shortName = module.name.replace(/botpress-/i, '')\n\n    if (module.settings.menuIcon === 'custom') {\n      const iconRequestPath = `/img/modules/${name}.png`\n      const iconPath = path.join(module.root, 'icon.png')\n\n      app.get(iconRequestPath, (req, res) => {\n        try {\n          const content = fs.readFileSync(iconPath)\n          res.contentType('image/png')\n          res.send(content)\n        } catch (err) {\n          bp.logger.warn(`Could not serve module icon [${name}] at: ${iconPath}`)\n        }\n      })\n    }\n\n    const liteDir = path.join(module.root, module.settings.liteDir || 'bin/lite')\n    const liteViews = fs.existsSync(liteDir)\n      ? fs.readdirSync(liteDir).filter(b => b.endsWith('.js'))\n      : []\n\n    app.get([\n      `/js/modules/${shortName}`, // The full module view\n      `/js/modules/${name}.js`, // <<-- DEPRECATED: Will be removed shortly. Only use shortNames\n      `/js/modules/${shortName}/:subview` // Lite view\n    ], (req, res) => {\n      const settingsKey = module.settings.webBundle\n      let bundlePath = path.join(module.root, settingsKey || 'bin/web.bundle.js')\n\n      if (req.params && req.params.subview) {\n        // Render lite view\n        bundlePath = path.join(liteDir, req.params.subview + '.bundle.js')\n      }\n\n      try {\n        const content = fs.readFileSync(bundlePath)\n        res.contentType('text/javascript')\n        res.send(content)\n      } catch (err) {\n        bp.logger.warn(`Could not serve module [${name}] at: ${bundlePath}`)\n        res.sendStatus(404)\n      }\n    })\n  }\n\n  function serveCustomTheme(app) {\n    let customTheme = ''\n\n    if (BP_EDITION !== 'lite' && bp.licensing.getFeatures().whitelabel === true) {\n      const themeLocation = path.join(bp.projectLocation, 'theme.css')\n      if (fs.existsSync(themeLocation)) {\n        customTheme = fs.readFileSync(themeLocation)\n      }\n    }\n\n    app.use('/style/custom-theme.css', (req, res) => {\n      res.contentType('text/css')\n      res.send(customTheme)\n    })\n  }\n\n  async function install(app) {\n\n    for (let name in bp._loadedModules) {\n      const module = bp._loadedModules[name]\n      serveModule(app, module)\n    }\n\n    app.use('/js/env.js', (req, res) => {\n      const { tokenExpiry, enabled } = bp.botfile.login\n      const optOutStats = !!bp.botfile.optOutStats\n      const appName = bp.botfile.appName || 'Botpress'\n      \n      const { isFirstRun, version } = bp\n      res.contentType('text/javascript')\n      res.send(`(function(window) {\n        window.NODE_ENV = \"${process.env.NODE_ENV || 'development'}\";\n        window.DEV_MODE = ${util.isDeveloping};\n        window.AUTH_ENABLED = ${enabled};\n        window.AUTH_TOKEN_DURATION = ${ms(tokenExpiry)};\n        window.OPT_OUT_STATS = ${optOutStats};\n        window.SHOW_GUIDED_TOUR = ${isFirstRun};\n        window.BOTPRESS_VERSION = \"${version}\";\n        window.APP_NAME = \"${appName}\";\n      })(window || {})`)\n    })\n\n    serveCustomTheme(app)\n\n    app.use(express.static(path.join(bp.projectLocation, 'static')))\n    \n    app.use(express.static(path.join(__dirname, '../lib/web')))\n\n    app.get('*', (req, res, next) => {\n      if (/html/i.test(req.headers.accept)) {\n        if (req.url && /^\\/lite\\//i.test(req.url)) {\n          return res.sendFile(path.join(__dirname, '../lib/web/lite.html'))\n        }\n        \n        return res.sendFile(path.join(__dirname, '../lib/web/index.html'))\n      }\n      next()\n    })\n\n    return Promise.resolve(true)\n  }\n\n  return { install }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/static.js","import _ from 'lodash'\nimport bodyParser from 'body-parser'\nimport express from 'express'\n\nimport ServiceLocator from '+/ServiceLocator'\nimport anonymousApis from './anonymous'\nimport securedApis from './secured'\n\nconst routersConditions = {}\nconst routers = {}\n\nmodule.exports = bp => {\n  async function _authenticationMiddleware(req, res, next) {\n    res.maybeSendRequireLogin = () => {\n      if (!bp.botfile.login.enabled) {\n        res.status(400).send({\n          message: 'Login must be turned on for this API method'\n        })\n\n        return true\n      } else {\n        return false\n      }\n    }\n\n    if (!bp.botfile.login.enabled) {\n      return next()\n    }\n\n    const user = await bp.security.authenticate(req.headers.authorization)\n    if (!!user) {\n      req.user = user\n      next()\n    } else {\n      res\n        .status(401)\n        .location('/login')\n        .end()\n    }\n  }\n\n  function installRouter(app) {\n    bp.getRouter = function(name, conditions) {\n      if (!/^botpress-/.test(name)) {\n        throw new Error(`The name of a router must start with 'botpress-'. Received: ${name}`)\n      }\n\n      if (!routers[name]) {\n        const router = express.Router()\n        routers[name] = router\n        app.use(`/api/${name}/`, router)\n      }\n\n      if (conditions) {\n        routersConditions[name] = Object.assign(routersConditions[name] || {}, conditions)\n      }\n\n      installProtector(routers[name])\n      return routers[name]\n    }\n  }\n\n  function installProtector(app) {\n    app.secure = function(operation, ressource) {\n      const wrap = method =>\n        function(name, ...handlers) {\n          const secure = async function(req, res, next) {\n            try {\n              if (!req.user) {\n                return next()\n              }\n\n              const authorizeApi = await ServiceLocator.getService('authorizeApi', false)\n\n              if (!authorizeApi) {\n                return next()\n              }\n\n              const authorized = await authorizeApi({ userId: req.user.id, operation, ressource })\n\n              if (authorized) {\n                return next()\n              }\n\n              return res.sendStatus(403) // HTTP Forbidden\n            } catch (err) {\n              return res.status(500).send({ message: err.message })\n            }\n          }\n\n          return app[method].call(app, name, secure, ...handlers)\n        }\n\n      return {\n        get: wrap('get'),\n        post: wrap('post'),\n        put: wrap('put'),\n        delete: wrap('delete')\n      }\n    }\n  }\n\n  function installMaybeUse(app) {\n    app.maybeUse = function() {\n      if (arguments.length === 3) {\n        app.use(arguments[0], maybeApply(arguments[1], arguments[2]))\n      } else if (arguments.length === 2) {\n        app.use(maybeApply(arguments[0], arguments[1]))\n      }\n    }\n  }\n\n  async function install(app) {\n    installRouter(app)\n    installProtector(app)\n    installMaybeUse(app)\n\n    app.maybeUse('bodyParser.json', bodyParser.json())\n    app.maybeUse('bodyParser.urlencoded', bodyParser.urlencoded({ extended: true }))\n\n    anonymousApis(bp, app)\n\n    app.use('/api/*', maybeApply('auth', _authenticationMiddleware))\n\n    securedApis(bp, app)\n  }\n\n  return { install }\n}\n\nfunction maybeApply(name, fn) {\n  return (req, res, next) => {\n    const router = req.originalUrl.match(/\\/api\\/(botpress-[^\\/]+).*$/i)\n    if (!router) {\n      return fn(req, res, next)\n    }\n\n    if (!routersConditions[router[1]]) {\n      return fn(req, res, next)\n    }\n\n    const condition = routersConditions[router[1]][name]\n    if (condition === false) {\n      next()\n    } else if (typeof condition === 'function' && condition(req) === false) {\n      next()\n    } else {\n      return fn(req, res, next)\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/api.js","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 87\n// module chunks = 0","import ExtraApiProviders from '+/api'\n\nmodule.exports = (bp, app) => {\n\n  app.post('/api/login', async (req, res) => {\n    bp.stats.track('api', 'auth', 'login')\n    const result = await bp.security.login(req.body.user, req.body.password, req.ip)\n    res.send(result)\n  })\n\n  const apis = ExtraApiProviders(bp, app)\n  apis.anonymous.map(x => x && x()) // Install all anonymous APIs\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/anonymous.js","import accounts from '+/api/accounts'\n\nmodule.exports = (bp, app) => ({\n  anonymous: [accounts(bp, app).installAnonymous],\n  secured: [accounts(bp, app).installSecured]\n})\n\n\n\n// WEBPACK FOOTER //\n// ./extensions/lite/api/index.js","module.exports = (bp, app) => {\n\n  const installSecured = () => {\n    \n    app.get('/api/my-account', async (req, res) => {\n      res.send(req.user)\n    })\n\n  }\n\n  const installAnonymous = () => {}\n\n  return {\n    name: '[Lite] Accounts Management',\n    installSecured,\n    installAnonymous\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./extensions/lite/api/accounts.js","import _ from 'lodash'\nimport fs from 'fs'\nimport path from 'path'\nimport uuid from 'uuid'\nimport multer from 'multer'\nimport Promise from 'bluebird'\n\nimport util from '../util'\nimport ExtraApiProviders from '+/api'\n\nlet logsSecret = uuid.v4()\n\nmodule.exports = (bp, app) => {\n  app.get('/api/ping', (req, res) => {\n    res.send('pong')\n  })\n\n  app.secure('read', 'modules/list').get('/api/modules', (req, res) => {\n    const modules = _.map(bp._loadedModules, module => {\n      return {\n        name: module.name,\n        homepage: module.homepage,\n        menuText: module.settings.menuText || module.name,\n        menuIcon: module.settings.menuIcon || 'view_module',\n        noInterface: !!module.settings.noInterface,\n        plugins: module.settings.plugins || []\n      }\n    })\n    res.send(modules)\n  })\n\n  app.secure('read', 'middleware/list').get('/api/middlewares', (req, res) => {\n    res.send(bp.middlewares.list())\n  })\n\n  app.secure('write', 'middleware/customizations').post('/api/middlewares/customizations', (req, res) => {\n    bp.stats.track('api', 'middlewares', 'customizations')\n    const { middlewares } = req.body\n    bp.middlewares.setCustomizations(middlewares)\n    bp.middlewares.load()\n    res.send(bp.middlewares.list())\n  })\n\n  app.secure('write', 'middleware/customizations').delete('/api/middlewares/customizations', (req, res) => {\n    bp.stats.track('api', 'middlewares', 'customizations')\n    bp.middlewares.resetCustomizations()\n    bp.middlewares.load()\n    res.send(bp.middlewares.list())\n  })\n\n  // DEPRECATED in Botpress 1.1\n  app.secure('read', 'notifications').get('/api/notifications', async (req, res) => {\n    res.send(await bp.notifications.getInbox())\n  })\n\n  app.secure('read', 'notifications').get('/api/notifications/inbox', async (req, res) => {\n    res.send(await bp.notifications.getInbox())\n  })\n\n  app.secure('read', 'bot/information').get('/api/bot/information', (req, res) => {\n    res.send(bp.about.getBotInformation())\n  })\n\n  app.secure('read', 'modules/list/community').get('/api/module/all', (req, res) => {\n    bp.modules.listAllCommunityModules().then(modules => res.send(modules))\n  })\n\n  app.secure('read', 'modules/list/community').get('/api/module/hero', (req, res) => {\n    bp.modules.getRandomCommunityHero().then(hero => res.send(hero))\n  })\n\n  app.get('/api/bot/production', (req, res) => {\n    res.send(!util.isDeveloping)\n  })\n\n  app.secure('read', 'modules/list/community').get('/api/bot/contributor', (req, res) => {\n    res.send(bp.bot.getContributor())\n  })\n\n  app.get('/api/license', async (req, res) => {\n    res.send(await bp.licensing.getLicensing())\n  })\n\n  app.secure('write', 'bot/information/license').post('/api/license', (req, res) => {\n    bp.stats.track('api', 'license', 'change')\n    bp.licensing\n      .changeLicense(req.body.license)\n      .then(() => {\n        res.sendStatus(200)\n      })\n      .catch(err =>\n        res.status(500).send({\n          message: err && err.message\n        })\n      )\n  })\n\n  app.secure('write', 'modules/list/install').post('/api/module/install/:name', (req, res) => {\n    bp.stats.track('api', 'modules', 'install')\n    const { name } = req.params\n    bp.modules\n      .install(name)\n      .then(() => {\n        res.sendStatus(200)\n        bp.restart(1000)\n      })\n      .catch(err =>\n        res.status(500).send({\n          message: err && err.message\n        })\n      )\n  })\n\n  app.secure('write', 'modules/list/uninstall').delete('/api/module/uninstall/:name', (req, res) => {\n    bp.stats.track('api', 'modules', 'uninstall')\n    const { name } = req.params\n    bp.modules\n      .uninstall(name)\n      .then(() => {\n        res.sendStatus(200)\n        bp.restart(1000)\n      })\n      .catch(err =>\n        res.status(500).send({\n          message: err && err.message\n        })\n      )\n  })\n\n  app.delete('/api/guided-tour', (req, res) => {\n    fs.unlink(path.join(bp.projectLocation, '.welcome'), () => {\n      bp.isFirstRun = false\n      res.sendStatus(200)\n    })\n  })\n\n  app.secure('read', 'bot/logs').get('/api/logs', (req, res) => {\n    const options = {\n      from: new Date() - 7 * 24 * 60 * 60 * 1000,\n      until: new Date(),\n      limit: (req.query && req.query.limit) || 50,\n      start: 0,\n      order: 'desc',\n      fields: ['message', 'level', 'timestamp']\n    }\n\n    bp.logger.query(options, (err, results) => {\n      if (err) {\n        return console.log(err)\n      }\n      res.send(results.file)\n    })\n  })\n\n  app.secure('read', 'bot/logs').get('/api/logs/key', (req, res) => {\n    res.send({ secret: logsSecret })\n  })\n\n  app.secure('read', 'bot/logs/archive').get('/logs/archive/:key', (req, res) => {\n    bp.stats.track('api', 'logs', 'archive')\n    if (req.params.key !== logsSecret) {\n      return res.sendStatus(403)\n    }\n\n    bp.logger.archiveToFile().then(archivePath => {\n      logsSecret = uuid.v4()\n      res.download(archivePath)\n    })\n  })\n\n  app.secure('read', 'bot/umm/blocs').get('/umm/blocs', (req, res) => {\n    const content = bp.umm.getDocument()\n    res.send({ content: content })\n  })\n\n  app.secure('read', 'bot/umm/templates').get('/umm/templates', (req, res) => {\n    res.send({ templates: bp.umm.getTemplates() })\n  })\n\n  app.secure('write', 'bot/umm/blocs').post('/umm/blocs', (req, res) => {\n    const { content } = req.body || {}\n    if (_.isNil(content)) {\n      return res.status(400).send({ message: 'You need to specify the content' })\n    }\n\n    bp.umm.saveDocument(content)\n\n    return res.sendStatus(200)\n  })\n\n  app.secure('write', 'bot/umm/simulation').post('/umm/simulate', (req, res) => {\n    try {\n      const { context, content, outputPlatform, incomingEvent } = req.body\n      const blocs = bp.umm.parse({ context, outputPlatform, markdown: content, incomingEvent })\n      res.send(blocs)\n    } catch (err) {\n      res.status(400).send({ message: err.message })\n    }\n  })\n\n  app.secure('read', 'bot/content').get('/content/categories', async (req, res) => {\n    res.send(await bp.contentManager.listAvailableCategories())\n  })\n\n  app.secure('read', 'bot/content').get('/content/categories/:id/schema', async (req, res) => {\n    res.send(await bp.contentManager.getCategorySchema(req.params.id))\n  })\n\n  app.secure('read', 'bot/content').get('/content/categories/:id/items', async (req, res) => {\n    if (req.params.id === 'all') {\n      req.params.id = null\n    }\n\n    const from = req.query.from || 0\n    const count = req.query.count || 50\n    const searchTerm = req.query.search\n\n    res.send(await bp.contentManager.listCategoryItems(req.params.id, from, count, searchTerm))\n  })\n\n  app.secure('read', 'bot/content').get('/content/export', async (req, res) => {\n    res.setHeader('Content-disposition', 'attachment; filename=content-export.json')\n    res.send(await bp.contentManager.exportContent())\n  })\n\n  app.secure('write', 'bot/content').post('/content/categories/:id/items', async (req, res) => {\n    res.send(\n      await bp.contentManager.createOrUpdateCategoryItem({\n        formData: req.body.formData,\n        categoryId: req.params.id\n      })\n    )\n  })\n\n  const contentUploadMulter = multer({\n    limits: {\n      fileSize: 1024 * 1000 * 10, // 10mb\n      files: 5 // Max 5 files\n    },\n    fileFilter: (req, file, cb) => {\n      if (file.mimetype !== 'application/json') {\n        cb(null, false)\n      } else {\n        cb(null, true)\n      }\n    }\n  })\n\n  app.secure('write', 'bot/content').post('/content/upload', contentUploadMulter.array('files[]'), async (req, res) => {\n    try {\n      const documents = req.files.map(file => JSON.parse(file.buffer.toString()))\n      await Promise.mapSeries(documents, doc => bp.contentManager.importContent(doc))\n      res.send({ success: true })\n    } catch (err) {\n      res.status(500).send(err.message)\n    }\n  })\n\n  app.secure('write', 'bot/content').post('/content/categories/:id/items/:itemId', async (req, res) => {\n    await bp.contentManager.createOrUpdateCategoryItem({\n      itemId: req.params.itemId,\n      formData: req.body.formData,\n      categoryId: req.params.id\n    })\n    res.sendStatus(200)\n  })\n\n  app.secure('write', 'bot/content').post('/content/categories/all/bulk_delete', async (req, res) => {\n    await bp.contentManager.deleteCategoryItems(req.body)\n    res.sendStatus(200)\n  })\n\n  const apis = ExtraApiProviders(bp, app)\n  apis.secured.map(x => x && x()) // Install all secured APIs\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/secured.js","module.exports = require(\"multer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"multer\"\n// module id = 92\n// module chunks = 0"],"sourceRoot":""}